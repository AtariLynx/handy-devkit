Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    1
                                                        01:11:41  

    1                   * ====================================================
    2                   
    3                   	.LIST OFF
   10                   	.LIST ON
   11                   
   12      0000         LO				.EQ 0
   13      0001         HI				.EQ 1
   14                   
   15      1000         RCARTEN			.EQ		$1000
   16                   
   17                   ; 0 -> No remapping of Handy RAM 
   18                   ; 1 -> Remap 4000-7FFF in Handy RAM
   19      15E0         SEGWR			.EQ 	$15E0
   20                   
   21      15D0         LDRADD			.EQ		$15D0 ; 20 bits of cartridge address
   22      15D3         ROMPAGE			.EQ		$15D3
   23                   ; Primary memory paging 
   24                   ; Secondary memory paging 
   25                   ;000 -> 4096 bytes/page 
   26                   ;001 -> 2048 bytes/page 
   27                   ;010 -> 1024 bytes/page 
   28                   ;011 -> 512 bytes/page
   29                   ;100 -> 256 bytes/page
   30                   
   31      0007         ROM_PAGING_MASK	.EQ		%00000111
   32                   
   33                   * ====================================================
   34                   
   35                   	BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
   36                   
   37 0000:             dest			.DS 2	; 00-01
   38 0002:             dest_old		.DS 2	; 02-03		Remapped memory location of H
   39 0004:             dest_old2		.DS 2	; 04-05
   40                   
   41                   	END_ZPAGE
    1      0006       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0006:           + 	  .ORG TEMPORG
    6                 + 
   42                   
   43      0200         BASE_ORG		.EQ $0200
   44      3000         NMI_ORG			.EQ $3000
   45                   
   46 FFFE:             		.ORG BASE_ORG
   47                   
   48 0200:             Unknown			.DS 1	; 
   49 0201:             RunAddr			.DS 2
   50                   
   51 0203:             REGISTERS:
   52 0203:             SaveA			.DS 1	; $0203
   53 0204:             SaveX			.DS 1	; $0204
   54 0205:             SaveY			.DS 1	; $0205
   55 0206:             SaveSP			.DS 1	; $0206
   56 0207:             SavePCHi		.DS 1	; $0207
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    2
                                                        01:11:41  

   57 0208:             SavePCLo		.DS 1	; $0208
   58 0209:             SavePS			.DS 1	; $0209
   59 020A:             SaveBusMonitor	.DS MONITOR_BYTECOUNT	; $020A
   60                   ;$020A-$0219	Monitor values
   61                   
   62                   ; $021E
   63 021A:             		.ORG BASE_ORG+$20
   64                   
   65 0220:             HowardEnabled	.DS 1	; Howard board enabled (0 = No, 1 
   66 0221:             CartridgeRegister	.DS	3
   67                   ; $0221-$0223: 24-bit counter (inverted data, suggesti
   68                   ; $0224-$0226
   69                   
   70                   ; $0226 ROMPAGE_RAM Shadow register to $15D3?
   71                   
   72 0224:             		.ORG $15D0
   73                   
   74                   ; $15D0-$15D2: ROM configuration (address, size parame
   75                   
   76                   * ====================================================
   77                   
   78 15D0:             		.ORG NMI_ORG
   79                   		.RUN *
   80                   
   81 3000:             NmiHandler	; $3000
   82 3000:D8           		CLD
   83 3001:8D 03 02     		STA SaveA 			; Store accumulator, X and Y register f
   84 3004:8E 04 02     		STX SaveX
   85 3007:8C 05 02     		STY SaveY
   86 300A:68           		PLA 				; Get PC, ReturnHi, ReturnLo from stack
   87 300B:FA           		PLX
   88 300C:7A           		PLY
   89 300D:8D 09 02     		STA SavePS			; Store for inspection
   90 3010:8E 07 02     		STX SavePCHi
   91 3013:8C 08 02     		STY SavePCLo
   92 3016:BA           		TSX					; Store stack pointer 
   93 3017:8E 06 02     		STX SaveSP
   94                   
   95                   ; Silence all audio channels	$301A
   96 301A:9C 20 FD     		STZ AUDIO0+AUD_VOLCNTRL
   97 301D:9C 28 FD     		STZ AUDIO1+AUD_VOLCNTRL
   98 3020:9C 30 FD     		STZ AUDIO2+AUD_VOLCNTRL
   99 3023:9C 38 FD     		STZ AUDIO3+AUD_VOLCNTRL
  100                   
  101                   ; $3026
  102 3026:20 ** **     		JSR InitComm		; $32C7
  103                   
  104 3029:             Main	; $3029
  105 3029:20 ** **     		JSR ReadByte		; Read byte from parallel port
  106                   
  107 302C:C9 01        		CMP #DOWNLOAD_REQUEST ; Control command: 01 means "D
  108 302E:D0 **        		BNE .2	
  109 3030:20 ** **     		JSR Download		; Control loop for downloading files f
  110 3033:80 F4        		BRA Main			; Next command
  111                   
  112                   ; $3035
  113 3035:C9 02        .2		CMP #UPLOAD_REQUEST	; Control command: 02 means "U
  114 3037:D0 **        		BNE .5
  115 3039:20 ** **     		JSR Upload			; Control loop for uploading data from 
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    3
                                                        01:11:41  

  116 303C:80 EB        		BRA Main			; Next command
  117                   
  118 303E:C9 05        .5		CMP #GO_REQUEST		; Control command: 05 means "Go"
  119 3040:D0 **        		BNE .3				; Check whether to return from NMI
  120 3042:A9 04        		LDA #TXOPEN			; Turn off serial IRQs before starting
  121 3044:8D 8C FD     		STA SERCTL			; and make sure serial port is open-col
  122 3047:80 **        		BRA .9
  123                   
  124                   ; $3049
  125 3049:C9 03        .3		CMP #CONTINUE_REQUEST
  126 304B:D0 **        		BNE .4
  127                   
  128                   ; Restore all previous values and return from NMI hand
  129 304D:AE 06 02     .9		LDX SaveSP		; Restore stack pointer
  130 3050:9A           		TXS
  131 3051:AD 08 02     		LDA SavePCLo	.DS 1	; $0208
  132 3054:48           		PHA
  133 3055:AD 07 02     		LDA SavePCHi	.DS 1	; $0207
  134 3058:48           		PHA
  135 3059:AD 09 02     		LDA SavePS		.DS 1	; $0209
  136 305C:48           		PHA
  137 305D:AD 03 02     		LDA SaveA		; Load stored values for A, X, Y 
  138 3060:AE 04 02     		LDX SaveX
  139 3063:AC 05 02     		LDY SaveY
  140 3066:40           		RTI
  141                   
  142                   ; $3067
  143 3067:C9 04        .4		CMP #SLAVE_REQUEST
  144 3069:D0 **        		BNE .6
  145 306B:20 ** **     		JSR BeginUpload
  146 306E:A9 00        		LDA #$00
  147 3070:20 ** **     		JSR WriteByte	; Zero (A) to page 1
  148 3073:20 ** **     		JSR EndUpload
  149 3076:4C 29 30     		JMP Main		; Next control command
  150                   
  151                   ; $3079
  152 3079:C9 06        .6		CMP #SEE_HOWARD_REQUEST
  153 307B:D0 **        		BNE .7
  154 307D:A9 01        		LDA #$01
  155 307F:8D 20 02     		STA HowardEnabled
  156 3082:9C E0 15     		STZ SEGWR		; No remapping of Handy RAM
  157 3085:4C 29 30     		JMP Main
  158                   
  159                   ; #3088
  160 3088:C9 07        .7		CMP #HIDE_HOWARD_REQUEST
  161 308A:D0 **        		BNE .8
  162 308C:9C 20 02     		STZ HowardEnabled
  163 308F:4C 29 30     		JMP Main
  164                   
  165                   ; $3092
  166 3092:4C 29 30     .8		JMP Main		; Next control command
  167                   
  168                   ; Control loop for downloading from Handebug to Howard
  169 3095:             Download
  170                   ; $3095
  171 3095:20 ** **     		JSR ReadByte
  172                   
  173                   ; $3098
  174 3098:C9 00        		CMP #END_OF_FILE ; End of .bin file
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    4
                                                        01:11:41  

  175 309A:D0 **        		BNE .11			; $309F
  176 309C:4C ** **     		JMP Done		; $314F
  177                   
  178                   ; $309F
  179 309F:C9 01        .11		CMP #ORIGIN		; Receive load address (1)
  180 30A1:D0 **        		BNE .12			; $30AC
  181 30A3:20 ** **     		JSR ReadAddress ; Read address from parallel port to
  182 30A6:86 00        		STX dest
  183 30A8:85 01        		STA dest+1
  184 30AA:80 E9        		BRA Download	; $3095
  185                   
  186                   ; $30AC
  187 30AC:C9 02        .12		CMP #DATA		; Load data of max 1-255 bytes (2)
  188 30AE:D0 **        		BNE .13
  189 30B0:20 ** **     		JSR ReadByte	; Read byte from parallel port 
  190 30B3:20 ** **     		JSR ReadByte	; and another one, discarding first (po
  191 30B6:A8           		TAY
  192 30B7:20 ** **     		JSR ReadRange	; Read Y number of bytes and store in 
  193 30BA:80 D9        		BRA Download
  194                   
  195 30BC:C9 03        .13		CMP #RUN_ADDRESS	; Receive run address (3)
  196 30BE:D0 **        		BNE .14			; $30CB
  197 30C0:20 ** **     		JSR ReadAddress ; Read two bytes to X and A
  198 30C3:8E 01 02     		STX RunAddr		; Store in a special place
  199 30C6:8D 02 02     		STA RunAddr+1
  200 30C9:80 CA        		BRA Download
  201                   
  202                   ; 30CB
  203 30CB:C9 10        .14		CMP #REGISTER	; Read registers from Amiga/PC
  204 30CD:D0 **        		BNE .15			; 
  205 30CF:A9 03        		LDA #<SaveA		; #$03 Store $0203 as address in $00, $
  206 30D1:85 00        		STA dest
  207 30D3:A9 02        		LDA #>SaveA		; #$02
  208 30D5:85 01        		STA dest+1
  209 30D7:A0 07        		LDY #REGISTER_BYTECOUNT	; Read 7 bytes to $0203
  210 30D9:20 ** **     		JSR ReadHoward
  211 30DC:80 B7        		BRA Download
  212                   
  213                   ; $30DE
  214 30DE:C9 11        .15		CMP #FILL_MEM	; Fill Range with value: 11 Value L
  215 30E0:D0 **        		BNE .27			; $311E
  216 30E2:20 ** **     		JSR ReadByte	; Read fill value
  217 30E5:48           		PHA
  218 30E6:20 ** **     		JSR ReadAddress	; Read destination address
  219 30E9:86 00        		STX dest
  220 30EB:85 01        		STA dest+1
  221 30ED:20 ** **     		JSR ReadByte	; Read count #3295
  222 30F0:A8           		TAY
  223 30F1:AD 20 02     		LDA HowardEnabled	; Is Howard board enabled?
  224 30F4:D0 19        		BNE $310F
  225 30F6:20 78 32     		JSR $3278		; Remap memory address
  226 30F9:68           		PLA
  227                   ; $30FA
  228 30FA:92 02        .20		STA (dest_old)	; Store at remapped address
  229 30FC:E6 02        		INC dest_old
  230 30FE:D0 **        		BNE .21
  231 3100:64 00        		STZ dest
  232 3102:E6 01        		INC dest+1
  233 3104:48           		PHA				; Crossing page boundary, so remap
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    5
                                                        01:11:41  

  234                   ; $3105
  235 3105:20 78 32     		JSR $3278
  236 3108:68           		PLA				; Restore fill value 
  237                   ; $3109
  238 3109:88           .21		DEY
  239 310A:D0 EE        		BNE .20
  240 310C:4C 95 30     		JMP Download
  241                   
  242                   ; $310F	Read when Howard board is enabled?
  243 310F:68           		PLA				; Restore fill value
  244 3110:             .23
  245 3110:92 00        		STA (dest)		; Addresses when Howard is visible are u
  246 3112:E6 00        		INC dest
  247 3114:D0 **        		BNE .22
  248 3116:E6 01        		INC dest+1
  249                   
  250 3118:88           .22		DEY
  251 3119:D0 F5        		BNE .23
  252 311B:4C 95 30     		JMP Download
  253                   
  254                   ; $311E
  255 311E:             .27
  256 311E:C9 13        		CMP #BUS_MONITOR
  257 3120:D0 **        		BNE .24			; $3132
  258 3122:A9 0A        		LDA #<SaveBusMonitor
  259 3124:85 00        		STA dest
  260 3126:A9 02        		LDA #>SaveBusMonitor
  261 3128:85 01        		STA dest+1
  262 312A:A0 10        		LDY #MONITOR_BYTECOUNT
  263 312C:20 ** **     		JSR ReadHoward	; $31EB
  264 312F:4C 95 30     		JMP Download
  265                   
  266                   ; $3132
  267 3132:C9 12        .24		CMP #LARGE_DATA
  268 3134:D0 **        		BNE .25			; $313F
  269 3136:20 ** **     		JSR ReadAddress		; Read length
  270 3139:20 FA 31     		JSR $31FA			; Handle large data routine
  271 313C:4C 95 30     		JMP Download
  272                   
  273                   ; 313F
  274 313F:C9 1A        .25		CMP #ROM
  275 3141:D0 **        		BNE .26			; $314C
  276 3143:20 F9 32     		JSR $32F9
  277 3146:20 ** **     		JSR DownloadROM
  278 3149:4C 95 30     		JMP Download
  279                   ; $314C
  280 314C:             .26
  281 314C:4C 95 30     		JMP Download
  282                   ; $314F
  283 314F:             Done
  284 314F:60           		RTS
  285                   
  286                   ; $3150
  287 3150:             Upload
  288 3150:20 ** **     .30		JSR ReadByte
  289 3153:C9 00        		CMP #END_OF_FILE
  290 3155:D0 **        		BNE .31			; $315A
  291 3157:4C ** **     		JMP UploadDone	; $31C3
  292                   
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    6
                                                        01:11:41  

  293                   ; $315A
  294 315A:C9 01        .31		CMP #ORIGIN
  295 315C:D0 **        		BNE .32			; $3167
  296 315E:20 ** **     		JSR ReadAddress
  297 3161:86 00        		STX dest
  298 3163:85 01        		STA dest+1
  299 3165:80 E9        		BRA .30			; $3150
  300                   
  301                   ; $3167
  302 3167:C9 02        .32		CMP #DATA
  303 3169:D0 **        		BNE .33			; $3191
  304 316B:20 ** **     		JSR ReadByte
  305 316E:A8           		TAY
  306 316F:A5 00        		LDA dest
  307 3171:85 04        		STA dest_old2
  308 3173:A5 01        		LDA dest+1
  309 3175:85 05        		STA dest_old2+1
  310 3177:20 ** **     		JSR BeginUpload
  311 317A:A9 02        		LDA #$02
  312 317C:20 ** **     		JSR WriteByte
  313 317F:AD 1E 02     		LDA $021E		; Similar to $FBB9 in monitor.src (versio
  314 3182:20 ** **     		JSR WriteByte
  315 3185:98           		TYA
  316 3186:20 ** **     		JSR WriteByte	; Length
  317 3189:20 39 32     		JSR $3239
  318 318C:20 ** **     		JSR EndUpload
  319 318F:80 BF        		BRA .30
  320                   
  321                   ; $3191
  322 3191:C9 10        .33		CMP #REGISTER
  323 3193:D0 **        		BNE .34			; $31AF
  324 3195:A9 03        		LDA #<REGISTERS
  325 3197:85 00        		STA dest
  326 3199:A9 02        		LDA #>REGISTERS
  327 319B:85 01        		STA dest+1
  328 319D:A0 07        		LDY #REGISTER_BYTECOUNT
  329 319F:20 ** **     		JSR BeginUpload
  330 31A2:A9 10        		LDA #REGISTER
  331 31A4:20 ** **     		JSR WriteByte
  332 31A7:20 5A 32     		JSR $325A		; WriteRangeCore
  333 31AA:20 ** **     		JSR EndUpload
  334 31AD:80 A1        		BRA Upload
  335                   
  336                   ; $31AF
  337 31AF:C9 14        .34		CMP #TRACE		; #$14
  338 31B1:D0 **        		BNE .35			; $31B5
  339 31B3:80 9B        		BRA Upload
  340                   
  341                   ; $31B5
  342 31B5:C9 1A        .35		CMP #ROM
  343 31B7:D0 **        		BNE .36			; $31C1
  344 31B9:20 F9 32     		JSR $32F9
  345 31BC:20 ** **     		JSR UploadROM
  346 31BF:80 8F        		BRA Upload
  347                   
  348                   ; $31C1
  349 31C1:             .36						; Unrecognized upload type
  350 31C1:80 8D        		BRA Upload
  351                   
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    7
                                                        01:11:41  

  352                   ; $31C3
  353 31C3:             UploadDone
  354 31C3:60           		RTS 
  355                   
  356                   ; $31C4
  357 31C4:             ReadAddress
  358 31C4:20 ** **     		JSR ReadByte
  359 31C7:AA           		TAX
  360 31C8:4C ** **     		JMP ReadByte
  361                   
  362                   ; $31CB
  363 31CB:             ReadRange
  364 31CB:AD 20 02     		LDA HowardEnabled
  365 31CE:D0 **        		BNE ReadHoward
  366 31D0:20 78 32     		JSR $3278
  367                   ; $31D3
  368 31D3:             .38
  369 31D3:20 ** **     		JSR ReadByte
  370 31D6:92 02        		STA ($02)
  371 31D8:E6 02        		INC $02
  372 31DA:D0 **        		BNE .37			; $31E3
  373 31DC:64 00        		STZ dest
  374 31DE:E6 01        		INC dest+1
  375 31E0:20 78 32     		JSR $3278
  376                   
  377                   ; $31E3
  378 31E3:88           .37		DEY
  379 31E4:D0 ED        		BNE .38			; $31D3
  380 31E6:A5 02        		LDA $02
  381 31E8:85 00        		STA $00
  382 31EA:60           		RTS
  383                   
  384                   ; $31EB
  385 31EB:             ReadHoward	; Register Y is number of bytes to read
  386 31EB:20 ** **     .39		JSR ReadByte
  387 31EE:92 00        		STA (dest)
  388 31F0:E6 00        		INC dest
  389 31F2:D0 **        		BNE .3A			; $31F6
  390 31F4:E6 01        		INC dest+1
  391                   ; $31F6
  392 31F6:88           .3A		DEY
  393 31F7:D0 F2        		BNE .39			; $31EB
  394 31F9:60           		RTS
  395                   
  396                   ; $31FA
  397                   ; Large data handling routine
  398 31FA:AC 20 02     		LDY HowardEnabled
  399 31FD:D0 **        		BNE .43			; $3222
  400                   
  401 31FF:A8           		TAY
  402 3200:8A           		TXA
  403 3201:F0 **        		BEQ .40			; $3204
  404 3203:C8           		INY
  405 3204:20 78 32     .40		JSR $3278
  406 3207:20 ** **     .41		JSR ReadByte
  407 320A:92 02        		STA ($02)
  408 320C:E6 02        		INC $02
  409 320E:D0 **        		BNE .42			; $3217
  410 3210:64 00        		STZ $00
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    8
                                                        01:11:41  

  411 3212:E6 01        		INC $01
  412 3214:20 78 32     		JSR $3278
  413                   ; $3217
  414 3217:CA           .42		DEX
  415 3218:D0 ED        		BNE .41			; $3207
  416 321A:88           		DEY
  417 321B:D0 EA        		BNE .41			; $3207
  418 321D:A5 02        		LDA $02
  419 321F:85 00        		STA $00
  420 3221:60           		RTS
  421                   
  422                   ; $3222		Howard board is enabled
  423 3222:A8           .43		TAY
  424 3223:8A           		TXA
  425 3224:F0 **        		BEQ .44			; $3227
  426 3226:C8           		INY
  427 3227:20 ** **     .44		JSR ReadByte
  428 322A:92 00        		STA (dest)
  429 322C:E6 00        		INC dest
  430 322E:D0 **        		BNE .45
  431 3230:E6 01        		INC dest+1
  432 3232:CA           .45		DEX
  433 3233:D0 F2        		BNE .44			; $3227
  434 3235:88           		DEY
  435 3236:D0 EF        		BNE .44			; $3227
  436 3238:60           		RTS
  437                   
  438                   ; $3239
  439 3239:             WriteRange
  440 3239:AD 20 02     		LDA HowardEnabled
  441 323C:D0 1C        		BNE $325A
  442 323E:20 78 32     		JSR $3278		; Memory switch
  443                   ; $3241
  444 3241:20 E3 32     		JSR $32E3
  445 3244:20 ** **     		JSR WriteByte
  446 3247:E6 02        		INC $02
  447 3249:D0 07        		BNE $3252
  448 324B:64 00        		STZ dest
  449 324D:E6 01        		INC dest+1
  450 324F:20 78 32     		JSR $3278		; Memory switch
  451                   ; $3252
  452 3252:88           		DEY
  453 3253:D0 EC        		BNE $3241
  454 3255:A5 02        		LDA dest_old
  455 3257:85 00        		STA dest
  456 3259:60           		RTS
  457                   
  458                   ; $325A
  459 325A:A5 00        		LDA dest
  460 325C:85 02        		STA $02
  461 325E:A5 01        		LDA dest+1
  462 3260:85 03        		STA $03
  463 3262:20 E3 32     		JSR $32E3
  464 3265:20 ** **     		JSR WriteByte
  465 3268:E6 02        		INC $02
  466 326A:D0 04        		BNE $3270
  467                   
  468 326C:E6 03        		INC $03
  469 326E:E6 01        		INC dest+1
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page    9
                                                        01:11:41  

  470                   ; $3270
  471 3270:88           		DEY
  472 3271:D0 EF        		BNE $3262
  473 3273:A5 02        		LDA $02
  474 3275:85 00        		STA dest
  475 3277:60           		RTS
  476                   
  477                   ; $3278
  478                   ; Memory mapping function from dest to dest_old
  479 3278:A5 00        		LDA dest
  480 327A:85 02        		STA dest_old
  481 327C:A5 01        		LDA dest+1
  482 327E:30 12        		BMI $3292		; Normal memory for $8000 and higher
  483 3280:C9 40        		CMP #$40
  484 3282:B0 0B        		BCS $328F		; Skip when dest+1 is $40-$7F
  485 3284:5A           		PHY
  486 3285:A0 01        		LDY #$01
  487 3287:8C E0 15     		STY SEGWR		; Remap $0000-$3FFF to $4000-$7FFF in Han
  488 328A:7A           		PLY
  489 328B:09 40        		ORA #$40		; Adjust address to range
  490 328D:80 03        		BRA $3292
  491                   ; $328F
  492 328F:9C E0 15     		STZ SEGWR		; No remapping of Handy RAM
  493                   ; $3292
  494 3292:85 03        		STA dest_old+1
  495 3294:60           		RTS
  496                   
  497                   ; $3295
  498 3295:             ReadByte
  499 3295:AD 80 15     		LDA $1580
  500 3298:10 FB        		BPL ReadByte
  501 329A:AD 81 15     		LDA $1581
  502 329D:60           		RTS
  503                   
  504                   ; $329E
  505 329E:             WriteByte
  506 329E:48           		PHA
  507 329F:AD 80 15     		LDA $1580
  508 32A2:10 FB        		BPL $329F
  509 32A4:68           		PLA
  510 32A5:8D 81 15     		STA $1581
  511 32A8:60           		RTS
  512                   
  513                   ; $32A9
  514 32A9:             BeginUpload
  515 32A9:AD 80 15     		LDA $1580
  516 32AC:29 40        		AND #$40
  517 32AE:F0 F9        		BEQ BeginUpload
  518 32B0:9C 82 15     		STZ $1582
  519 32B3:A9 80        		LDA #$80
  520 32B5:8D 83 15     		STA $1583
  521 32B8:60           		RTS
  522                   
  523                   ; $32B9
  524 32B9:             EndUpload
  525 32B9:AD 80 15     		LDA $1580
  526 32BC:10 FB        		BPL EndUpload
  527 32BE:A9 80        		LDA #$80
  528 32C0:8D 82 15     		STA $1582
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page   10
                                                        01:11:41  

  529 32C3:9C 83 15     		STZ $1583
  530 32C6:60           		RTS
  531                   
  532                   ; $32C7
  533 32C7:             InitComm
  534 32C7:48           		PHA
  535 32C8:AD 80 15     		LDA $1580
  536 32CB:29 40        		AND #$40
  537 32CD:D0 F9        		BNE $32C8
  538 32CF:A9 80        		LDA #$80
  539 32D1:8D 82 15     		STA $1582
  540 32D4:8D 83 15     		STA $1583
  541                   ; $32D7
  542 32D7:AD 80 15     		LDA $1580
  543 32DA:29 40        		AND #$40
  544 32DC:F0 F9        		BEQ $32D7
  545 32DE:9C 83 15     		STZ $1583
  546 32E1:68           		PLA
  547 32E2:60           		RTS
  548                   
  549                   ; $32E3
  550 32E3:             ReadMemory
  551 32E3:AD 00 02     		LDA $0200
  552 32E6:D0 0E        		BNE $32F6
  553 32E8:A5 03        		LDA $03
  554 32EA:C9 FC        		CMP #$FC		; Memory range below $FC00
  555 32EC:D0 08        		BNE $32F6
  556 32EE:A5 02        		LDA $02			; 
  557 32F0:10 06        		BPL $32F8
  558 32F2:C9 84        		CMP #$84		; Do nothing for $FC84 and below (Unalloca
  559 32F4:90 02        		BCC $32F8
  560                   ; $32F6
  561 32F6:B2 02        		LDA ($02)
  562 32F8:60           		RTS
  563                   
  564                   
  565                   ; $15D0-$15D2: ROM configuration (address, size parame
  566                   ; $15D3: ROM bank/page control register
  567                   ; $15E0: bank switching?
  568                   
  569                   
  570                   ; $32F9					; Prepares ROM access
  571 32F9:20 C4 31     		JSR ReadAddress
  572 32FC:8E D0 15     		STX LDRADD		; $15D0
  573 32FF:8D D1 15     		STA LDRADD+1	; $15D1
  574 3302:20 95 32     		JSR ReadByte
  575 3305:8D D2 15     		STA LDRADD+2	; $15D2		20-bit address for cartridge
  576 3308:20 95 32     		JSR ReadByte	; Length to read LSB first to MSB last
  577 330B:49 FF        		EOR #$FF		; EXOR'ed to count up
  578 330D:8D 21 02     		STA $0221		
  579 3310:20 95 32     		JSR ReadByte
  580 3313:49 FF        		EOR #$FF
  581 3315:8D 22 02     		STA $0222
  582 3318:20 95 32     		JSR ReadByte	; MSB of address
  583 331B:49 FF        		EOR #$FF
  584 331D:8D 23 02     		STA $0223
  585 3320:20 95 32     		JSR ReadByte	; ???
  586 3323:AA           		TAX
  587 3324:30 **        		BMI .80
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page   11
                                                        01:11:41  

  588                   		
  589 3326:29 07        		AND #ROM_PAGING_MASK		; Page size is 3 bits (see ROM
  590 3328:8D 24 02     		STA $0224		; ROM primary memory paging
  591 332B:A9 00        		LDA #<RCARTEN
  592 332D:85 04        		STA $04
  593 332F:A9 10        		LDA #>RCARTEN
  594 3331:85 05        		STA $05
  595 3333:80 **        		BRA .81
  596                   
  597                   ; $3335
  598 3335:29 07        .80		AND #ROM_PAGING_MASK
  599 3337:8D 25 02     		STA $0225		; ROM secondary memory paging
  600 333A:A9 01        		LDA #<RCARTEN+1
  601 333C:85 04        		STA $04
  602 333E:A9 10        		LDA #>RCARTEN
  603 3340:85 05        		STA $05
  604                   
  605                   ; $3342
  606 3342:AD 24 02     .81		LDA $0224
  607 3345:29 07        		AND #ROM_PAGING_MASK
  608 3347:8D 27 02     		STA $0227		; 
  609 334A:AD 25 02     		LDA $0225		; Secondary paging is at bits 3-5
  610 334D:29 07        		AND #ROM_PAGING_MASK	; Mask to make sure it is withi
  611 334F:0A           		ASL
  612 3350:0A           		ASL
  613 3351:0A           		ASL				; Shift to bits 3-5
  614 3352:0D 27 02     		ORA $0227		; Combine with primary paging
  615 3355:8D D3 15     		STA ROMPAGE		; Set resulting ROM primary and seconda
  616 3358:8D 26 02     		STA $0226		; ROMPAGE_RAM Shadow address
  617 335B:60           		RTS
  618                   
  619                   ; $335C					; Download ROM
  620 335C:             DownloadROM
  621 335C:9C D3 15     		STZ ROMPAGE 	; "Before accessing memory through this
  622 335F:             .83
  623 335F:EE 21 02     		INC $0221		; Least significant byte of address
  624 3362:D0 **        		BNE .82			; Receive byte and write to ROM 
  625 3364:EE 22 02     		INC $0222
  626 3367:D0 **        		BNE .82
  627 3369:EE 23 02     		INC $0223		; Most significant
  628 336C:D0 **        		BNE .82		
  629 336E:AD 26 02     		LDA $0226		; ROMPAGE_RAM
  630 3371:8D D3 15     		STA ROMPAGE		; Restore original ROM paging, as readi
  631 3374:60           		RTS
  632                   		
  633 3375:20 95 32     .82		JSR ReadByte
  634 3378:92 04        		STA ($04)		; $04 holds write address of current ROM
  635 337A:80 E3        		BRA .83
  636                   
  637                   ; $337C
  638 337C:             UploadROM
  639 337C:20 A9 32     		JSR BeginUpload		; Uploading of ROM content
  640 337F:AD 20 02     		LDA HowardEnabled
  641 3382:D0 03        		BNE $3387			; If Howard is visible, 
  642 3384:9C D3 15     		STZ ROMPAGE			; "Before accessing memory through thi
  643                   ; $3387
  644 3387:             .84
  645 3387:EE 21 02     		INC $0221			
  646 338A:D0 **        		BNE .85
Epyx HandyAsm 1.12      howard.src                      12-Aug-12501:11:41 Page   12
                                                        01:11:41  

  647 338C:EE 22 02     		INC $0222
  648 338F:D0 **        		BNE .85
  649 3391:EE 23 02     		INC $0223
  650 3394:D0 **        		BNE .85
  651 3396:AD 26 02     		LDA $0226			; ROMPAGE_RAM
  652 3399:8D D3 15     		STA ROMPAGE
  653 339C:20 B9 32     		JSR EndUpload
  654 339F:60           		RTS
  655                   
  656                   ; $33A0
  657 33A0:             .85
  658 33A0:B2 04        		LDA ($04)			; 
  659 33A2:20 9E 32     		JSR WriteByte
  660 33A5:80 E0        		BRA .84
  661                   
Epyx HandyAsm 1.12      Symbols                         12-Aug-12501:11:41 Page   13
                                                        01:11:41  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 A_OFFSET                          $0000 BACKGROUND_SPRITE
$0001 BACKNONCOLL_SPRITE                $0000 BACK_SHADOW_SPRITE
$0200 BASE_ORG                          MACRO BEGIN_ALLOCATE_ZEROPAGE
MACRO BEGIN_ZPAGE                       $00C0 BITS_MASK
$FDB0 BLUERED0                          $FDB1 BLUERED1
$FDB2 BLUERED2                          $FDB3 BLUERED3
$FDB4 BLUERED4                          $FDB5 BLUERED5
$FDB6 BLUERED6                          $FDB7 BLUERED7
$FDB8 BLUERED8                          $FDB9 BLUERED9
$FDBA BLUEREDA                          $FDBB BLUEREDB
$FDBC BLUEREDC                          $FDBD BLUEREDD
$FDBE BLUEREDE                          $FDBF BLUEREDF
$0002 BORROW_IN                         $0001 BORROW_OUT
$0003 BOUNDARY_SPRITE                   $0015 BREAK_CONTROLS
$0002 BSHADOW_SPRITE                    $0013 BUS_MONITOR
$0002 B_BUTTON                          $32A9 BeginUpload
$0002 CART0_IO_INACTIVE                 $0004 CART1_IO_INACTIVE
$0002 CART_ADDR_DATA                    $0001 CART_ADDR_STROBE
$0002 CART_POWER_OFF                    $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $0003 CONTINUE_REQUEST
$FD91 CPUSLEEP                          $FFFE CPU_IRQ
$FFFA CPU_NMI                           $FFFC CPU_RESET
$0221 CartridgeRegister                 $0002 DATA
$FD95 DISPADRH                          $FD94 DISPADRL
$FD92 DISPCTL                           $1FE0 DISPLAY_BUFSIZE
$0008 DISP_COLOR                        $0002 DISP_FLIP
$0004 DISP_FOURBIT                      $0001 DMA_ENABLE
$0001 DOWNLOAD_REQUEST                  $0001 DRAW_LEFT
$0002 DRAW_UP                           $314F Done
$3095 Download                          $335C DownloadROM
$0008 ENABLE_COUNT                      $0080 ENABLE_INT
$0020 ENABLE_INTEGRATE                  $0010 ENABLE_RELOAD
MACRO END_ALLOCATE_ZEROPAGE             $0000 END_OF_FILE
MACRO END_ZPAGE                         $0004 EVER_ON
$0001 EXTERNAL_POWER                    $32B9 EndUpload
$0080 FEEDBACK_7                        $0011 FILL_MEM
$0004 FLIP_BUTTON                       $00C0 FOUR_PER_PIXEL
$0004 FRAMERR                           $0005 GO_REQUEST
$FDA0 GREEN0                            $FDA1 GREEN1
$FDA2 GREEN2                            $FDA3 GREEN3
Epyx HandyAsm 1.12      Symbols                         12-Aug-12501:11:41 Page   14
                                                        01:11:41  

$FDA4 GREEN4                            $FDA5 GREEN5
$FDA6 GREEN6                            $FDA7 GREEN7
$FDA8 GREEN8                            $FDA9 GREEN9
$FDAA GREENA                            $FDAB GREENB
$FDAC GREENC                            $FDAD GREEND
$FDAE GREENE                            $FDAF GREENF
$FC00 HARDWARE_START                    $FD00 HCOUNT
$0020 HFLIP                             $0001 HI
$0007 HIDE_HOWARD_REQUEST               $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$0016 HOWARD_ABUS                       $0017 HOWARD_BBUS
$0018 HOWARD_CBUS                       $0019 HOWARD_DBUS
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         $FC29 HSIZOFFH
$FC28 HSIZOFFL                          $0220 HowardEnabled
$0002 INNER_BUTTON                      $FD80 INTRST
$FD81 INTSET                            $FD8B IODAT
$FD8A IODIR                             $FCC3 IOData
$FCC2 IOStatus                          $32C7 InitComm
$FBF0 IntTable                          $FCB0 JOYSTICK
$0080 JOY_DOWN                          $0010 JOY_LEFT
$0020 JOY_RIGHT                         $0040 JOY_UP
$0012 LARGE_DATA                        $0004 LAST_CLOCK
$15D0 LDRADD                            $FCC0 LEDS
$0010 LEFT0_SELECT                      $0020 LEFT1_SELECT
$0040 LEFT2_SELECT                      $0080 LEFT3_SELECT
$0008 LEFTHAND                          $0008 LEFTHANDED
$00F0 LEFT_ATTENMASK                    $0080 LITERAL
$0000 LO                                $FFF9 MAPCTL
$FC55 MATHA                             $FC54 MATHB
$FC53 MATHC                             $0020 MATHCARRY
$FC52 MATHD                             $FC63 MATHE
$FC62 MATHF                             $FC61 MATHG
$FC60 MATHH                             $FC6F MATHJ
$FC6E MATHK                             $FC6D MATHL
$FC6C MATHM                             $FC57 MATHN
$FC56 MATHP                             $0040 MATHWARNING
$0080 MATHWORKING                       $FD88 MIKEYHREV
$FD89 MIKEYSREV                         $FD00 MIKEY_BASE
$0002 MIKEY_SPACE                       $0010 MONITOR_BYTECOUNT
$0001 MONITOR_I                         $F900 MONITOR_RAM_RESERVED
$00F8 MONITOR_ZP_RESERVED               $FD44 MPAN
$FD50 MSTEREO                           $FD9C MTEST0
$FD9D MTEST1                            $FD9E MTEST2
$3029 Main                              $0006 NEXTZPG
$3000 NMI_ORG                           $0004 NOEXP
$0005 NONCOLL_SPRITE                    $0000 NOP_REQUEST
$0004 NORMAL_SPRITE                     $0020 NO_COLLIDE
$3000 NmiHandler                        $0000 ONE_PER_PIXEL
$0008 OPTION1_BUTTON                    $0004 OPTION2_BUTTON
$0001 ORIGIN                            $0001 OUTER_BUTTON
$0008 OVERRUN                           $0001 PARBIT
$0010 PAREN                             $0010 PARERR
$0001 PAREVEN                           $0001 PAUSE_SWITCH
$FD93 PBKUP                             $0004 PC_OFFSET
$0002 POWERON                           $FC2F PROCADRH
$FC2E PROCADRL                          $0006 P_OFFSET
$1000 RCARTEN                           $FCB2 RCART_0
$FCB3 RCART_1                           $0010 READ_ENABLE
Epyx HandyAsm 1.12      Symbols                         12-Aug-12501:11:41 Page   15
                                                        01:11:41  

$0010 REGISTER                          $0203 REGISTERS
$0007 REGISTER_BYTECOUNT                $0010 RELOAD_HV
$0020 RELOAD_HVS                        $0030 RELOAD_HVST
$0030 RELOAD_MASK                       $0000 RELOAD_NONE
$0008 RESETERR                          $0040 RESET_DONE
$0008 RESTART_BUTTON                    $0008 RESTLESS
$0008 REUSE_PALETTE                     $0001 RIGHT0_SELECT
$0002 RIGHT1_SELECT                     $0004 RIGHT2_SELECT
$0008 RIGHT3_SELECT                     $000F RIGHT_ATTENMASK
$001A ROM                               $15D3 ROMPAGE
$019A ROM_HEADER_SIZE                   $0007 ROM_PAGING_MASK
$0004 ROM_SPACE                         $0003 RUN_ADDRESS
$0002 RXBRK                             $0040 RXINTEN
$0040 RXRDY                             $31C4 ReadAddress
$3295 ReadByte                          $31EB ReadHoward
$32E3 ReadMemory                        $31CB ReadRange
$0201 RunAddr                           $FC2D SCBADRH
$FC2C SCBADRL                           $FC11 SCBNEXTH
$FC10 SCBNEXTL                          $FC23 SCVPOSH
$FC22 SCVPOSL                           $FD90 SDONEACK
$0006 SEE_HOWARD_REQUEST                $15E0 SEGWR
$FD8C SERCTL                            $FD8D SERDAT
$FD10 SERIALRATE                        $0010 SERIAL_INT
$0007 SHADOW_SPRITE                     $0080 SIGNMATH
$0004 SKIP_SPRITE                       $0004 SLAVE_REQUEST
$FC82 SPRCOLL                           $FC80 SPRCTL0
$FC81 SPRCTL1                           $FC13 SPRDLINEH
$FC12 SPRDLINEL                         $FC21 SPRDOFFH
$FC20 SPRDOFFL                          $FC91 SPRGO
$FC19 SPRHSIZH                          $FC18 SPRHSIZL
$FC83 SPRINIT                           $0002 SPRITESTOP
$0002 SPRITETOSTOP                      $0001 SPRITEWORKING
$0001 SPRITE_GO                         $FC92 SPRSYS
$FC1B SPRVSIZH                          $FC1A SPRVSIZL
$FC1D STRETCHH                          $FC1C STRETCHL
$FC90 SUZYBUSEN                         $FC88 SUZYHREV
$FC89 SUZYSREV                          $FC00 SUZY_BASE
$0001 SUZY_SPACE                        $FCB1 SWITCHES
$FD87 SYSCTL1                           $0003 S_OFFSET
$0203 SaveA                             $020A SaveBusMonitor
$0207 SavePCHi                          $0208 SavePCLo
$0209 SavePS                            $0206 SaveSP
$0204 SaveX                             $0205 SaveY
$FFFE TEMPORG                           $0080 THREE_PER_PIXEL
$FC03 TILTACUMH                         $FC02 TILTACUML
$FC1F TILTH                             $FC1E TILTL
$FD00 TIMER0                            $0001 TIMER0_INT
$FD04 TIMER1                            $0002 TIMER1_INT
$FD08 TIMER2                            $0004 TIMER2_INT
$FD0C TIMER3                            $0008 TIMER3_INT
$FD10 TIMER4                            $FD14 TIMER5
$0020 TIMER5_INT                        $FD18 TIMER6
$0040 TIMER6_INT                        $FD1C TIMER7
$0080 TIMER7_INT                        $0008 TIMER_DONE
$0000 TIM_BACKUP                        $0001 TIM_CONTROLA
$0003 TIM_CONTROLB                      $0002 TIM_COUNT
$FC01 TMPADRH                           $FC00 TMPADRL
$0014 TRACE                             $0080 TURBO_DISABLE
$0040 TWO_PER_PIXEL                     $0002 TXBRK
Epyx HandyAsm 1.12      Symbols                         12-Aug-12501:11:41 Page   16
                                                        01:11:41  

$0020 TXEMPTY                           $0080 TXINTEN
$0004 TXOPEN                            $0080 TXRDY
$0004 UNSAFEACCESS                      $0004 UNSAFEACCESSRST
$0002 UPLOAD_REQUEST                    $0002 UP_CURRENT_PAGE
$0005 UP_HAHDATA                        $0004 UP_MEMWATCH
$0003 UP_REGISTERS                      $0001 UP_THIS_PAGE
$0200 Unknown                           $3150 Upload
$31C3 UploadDone                        $337C UploadROM
$FD08 VCOUNT                            $0008 VECTOR_SPACE
$0004 VERTICAL_INT                      $0010 VFLIP
$FC0D VIDADRH                           $FC0C VIDADRL
$FC09 VIDBASH                           $FC08 VIDBASL
$FC07 VOFFH                             $FC06 VOFFL
$FC17 VPOSSTRTH                         $FC16 VPOSSTRTL
$FC27 VSIZACUMH                         $FC26 VSIZACUML
$FC2B VSIZOFFH                          $FC2A VSIZOFFL
$0010 VSTRETCH                          $0010 VSTRETCHING
$329E WriteByte                         $3239 WriteRange
$0006 XOR_SHADOW_SPRITE                 $0006 XOR_SPRITE
$0001 X_OFFSET                          $0002 Y_OFFSET
$0000 dest                              $0002 dest_old
$0004 dest_old2                         
