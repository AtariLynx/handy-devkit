Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    1
                                                        00:16:03  

    1                   * ====================================================
    2                   
    3                   	.LIST OFF
   10                   	.LIST ON
   11                   
   12      0000         LO				.EQ 0
   13      0001         HI				.EQ 1
   14                   
   15                   ;NEXTZPG			.= $00
   16                   
   17                   	BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
   18                   
   19 0000:             dest		.DS 2	; 00-01
   20 0002:             dest_old	.DS 2	; 02-03
   21                   
   22                   	END_ZPAGE
    1      0004       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0004:           + 	  .ORG TEMPORG
    6                 + 
   23                   
   24      0200         BASE_ORG		.EQ $0200
   25      3000         NMI_ORG			.EQ $3000
   26                   
   27 FFFE:             		.ORG BASE_ORG
   28                   
   29 0200:             Unknown		.DS 1
   30 0201:             RunAddr		.DS 2
   31 0203:             SaveA		.DS 1	; $0203
   32 0204:             SaveX		.DS 1	; $0204
   33 0205:             SaveY		.DS 1	; $0205
   34 0206:             SaveSP		.DS 1	; $0206
   35 0207:             SavePCHi	.DS 1	; $0207
   36 0208:             SavePCLo	.DS 1	; $0208
   37 0209:             SavePS		.DS 1	; $0209
   38                   
   39                   * ====================================================
   40                   
   41 020A:             		.ORG NMI_ORG
   42                   		.RUN *
   43                   
   44 3000:             NmiHandler	; $3000
   45 3000:D8           		CLD
   46 3001:8D 03 02     		STA SaveA 			; Store accumulator, X and Y register f
   47 3004:8E 04 02     		STX SaveX
   48 3007:8C 05 02     		STY SaveY
   49 300A:68           		PLA 				; Get PC, ReturnHi, ReturnLo from stack
   50 300B:FA           		PLX
   51 300C:7A           		PLY
   52 300D:8D 09 02     		STA SavePS			; Store for inspection
   53 3010:8E 07 02     		STX SavePCHi
   54 3013:8C 08 02     		STY SavePCLo
   55 3016:BA           		TSX					; Store stack pointer 
   56 3017:8E 06 02     		STX SaveSP
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    2
                                                        00:16:03  

   57                   
   58                   ; Silence all audio channels	$301A
   59 301A:9C 20 FD     		STZ AUDIO0+AUD_VOLCNTRL
   60 301D:9C 28 FD     		STZ AUDIO1+AUD_VOLCNTRL
   61 3020:9C 30 FD     		STZ AUDIO2+AUD_VOLCNTRL
   62 3023:9C 38 FD     		STZ AUDIO3+AUD_VOLCNTRL
   63                   
   64                   ; $3026
   65 3026:20 ** **     		JSR InitComm		; $32C7
   66                   
   67 3029:             Main	; $3029
   68 3029:20 ** **     		JSR ReadByte		; Read byte from parallel port
   69                   ; 		JSR $3295
   70                   
   71 302C:C9 01        		CMP #DOWNLOAD_REQUEST ; Control command: 01 means "D
   72 302E:D0 **        		BNE .2	
   73 3030:20 ** **     		JSR Download		; Control loop for downloading files f
   74 3033:80 F4        		BRA Main			; Next command
   75                   
   76                   ; $3035
   77 3035:C9 02        .2		CMP #UPLOAD_REQUEST	; Control command: 02 means "U
   78 3037:D0 **        		BNE .5
   79 3039:20 ** **     		JSR Upload			; Control loop for uploading data from 
   80                   ;		JSR $3150
   81 303C:80 EB        		BRA Main
   82                   ;		JMP Main			; Next command
   83                   
   84 303E:C9 05        .5		CMP #GO_REQUEST		; Control command: 05 means "Go"
   85 3040:D0 **        		BNE .3				; Check whether to return from NMI
   86 3042:A9 04        		LDA #TXOPEN			; Turn off serial IRQs before starting
   87 3044:8D 8C FD     		STA SERCTL			; and make sure serial port is open-col
   88 3047:80 **        		BRA .9
   89                   
   90                   ; $3049
   91 3049:C9 03        .3		CMP #CONTINUE_REQUEST
   92 304B:D0 **        		BNE .4
   93                   
   94                   ; Restore all previous values and return from NMI hand
   95 304D:AE 06 02     .9		LDX SaveSP		; Restore stack pointer
   96 3050:9A           		TXS
   97 3051:AD 08 02     		LDA SavePCLo	.DS 1	; $0208
   98 3054:48           		PHA
   99 3055:AD 07 02     		LDA SavePCHi	.DS 1	; $0207
  100 3058:48           		PHA
  101 3059:AD 09 02     		LDA SavePS		.DS 1	; $0209
  102 305C:48           		PHA
  103 305D:AD 03 02     		LDA SaveA		; Load stored values for A, X, Y 
  104 3060:AE 04 02     		LDX SaveX
  105 3063:AC 05 02     		LDY SaveY
  106 3066:40           		RTI
  107                   
  108                   ; $3067
  109 3067:C9 04        .4		CMP #SLAVE_REQUEST
  110 3069:D0 **        		BNE .6
  111 306B:20 ** **     		JSR BeginUpload	; $32A9
  112 306E:A9 00        		LDA #$00
  113 3070:20 ** **     		JSR WriteByte	; Zero (A) to page 1 $329E
  114 3073:20 ** **     		JSR EndUpload	; $32b9
  115 3076:4C 29 30     		JMP Main		; Next control command
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    3
                                                        00:16:03  

  116                   
  117                   ; $3079
  118 3079:C9 06        .6		CMP #SEE_HOWARD_REQUEST
  119 307B:D0 0B        		BNE $3088
  120 307D:A9 01        		LDA #$01
  121 307F:8D 20 02     		STA $0220
  122 3082:9C E0 15     		STZ $15E0
  123 3085:4C 29 30     		JMP Main
  124                   
  125                   ; #3088
  126 3088:C9 07        .7		CMP #HIDE_HOWARD_REQUEST
  127 308A:D0 **        		BNE .8
  128 308C:9C 20 02     		STZ $0220
  129 308F:4C 29 30     		JMP Main
  130                   
  131                   ; $3092
  132 3092:4C 29 30     .8		JMP Main		; Next control command
  133                   
  134                   ; Control loop for downloading bin from Howard to Howd
  135 3095:             Download
  136                   
  137                   ; $3095
  138 3095:20 ** **     		JSR ReadByte	; $3295
  139                   
  140                   ; $3098
  141 3098:C9 00        		CMP #END_OF_FILE ; End of .bin file
  142 309A:D0 **        		BNE .11			; $309F
  143 309C:4C ** **     		JMP Done		; $314F
  144                   
  145                   ; $309F
  146 309F:C9 01        .11		CMP #ORIGIN		; Receive load address (1)
  147 30A1:D0 **        		BNE .12			; $30AC
  148 30A3:20 ** **     		JSR ReadAddress ; Read address from parallel port to
  149 30A6:86 00        		STX dest
  150 30A8:85 01        		STA dest+1
  151 30AA:80 E9        		BRA Download	; $3095
  152                   
  153                   ; $30AC
  154 30AC:C9 02        .12		CMP #DATA		; Load data of max 1-255 bytes (2)
  155 30AE:D0 0C        		BNE $30BC
  156 30B0:20 ** **     		JSR ReadByte	; Read byte from parallel port 
  157 30B3:20 ** **     		JSR ReadByte	; and another one, discarding first (po
  158 30B6:A8           		TAY
  159 30B7:20 ** **     		JSR ReadRange	; Read Y number of bytes and store in 
  160 30BA:80 D9        		BRA Download
  161                   
  162 30BC:C9 03        .13		CMP #RUN_ADDRESS	; Receive run address (3)
  163 30BE:D0 **        		BNE .14			; $30CB
  164 30C0:20 ** **     		JSR ReadAddress ; Read two bytes to X and A $31C4
  165 30C3:8E 01 02     		STX RunAddr		; Store in a special place $0201
  166 30C6:8D 02 02     		STA RunAddr+1	; $0202
  167 30C9:80 CA        		BRA Download
  168                   
  169                   ; 30CB
  170 30CB:C9 10        .14		CMP #REGISTER	; Read registers from Amiga/PC
  171 30CD:D0 **        		BNE .15			; 30DE
  172 30CF:A9 03        		LDA #<SaveA		; #$03 Store $0203 as address in $00, $
  173 30D1:85 00        		STA dest
  174 30D3:A9 02        		LDA #>SaveA		; #$02
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    4
                                                        00:16:03  

  175 30D5:85 01        		STA dest+1
  176 30D7:A0 07        		LDY #REGISTER_BYTECOUNT	; Read 7 bytes to $0203
  177 30D9:20 EB 31     		JSR $31EB		; ReadRange?
  178 30DC:80 B7        		BRA Download
  179                   
  180 30DE:C9 11        .15		CMP #FILL_MEM	; Fill Range with value: 11 Value L
  181 30E0:D0 **        		BNE .27			; $311E
  182 30E2:20 ** **     		JSR ReadByte	; Read fill value $3295
  183 30E5:48           		PHA
  184 30E6:20 ** **     		JSR ReadAddress	; Read destination address $31c4
  185 30E9:86 00        		STX dest
  186 30EB:85 01        		STA dest+1
  187 30ED:20 ** **     		JSR ReadByte	; Read count #3295
  188 30F0:A8           		TAY
  189 30F1:AD 20 02     		LDA $0220
  190 30F4:D0 19        		BNE $310F
  191 30F6:20 78 32     		JSR $3278
  192 30F9:68           		PLA
  193                   ; $30FA
  194 30FA:92 02        .20		STA (dest_old)		; Store at address in ($02)
  195 30FC:E6 02        		INC dest_old
  196 30FE:D0 **        		BNE .21
  197 3100:64 00        		STZ dest
  198 3102:E6 01        		INC dest+1
  199 3104:48           		PHA
  200                   ; $3105
  201 3105:20 78 32     		JSR $3278
  202 3108:68           		PLA
  203                   ; $3109
  204 3109:88           .21		DEY
  205 310A:D0 EE        		BNE .20			; $30FA
  206 310C:4C 95 30     		JMP Download
  207                   
  208                   ; $310F
  209 310F:68           		PLA
  210                   ; $3110
  211 3110:             .23
  212 3110:92 00        		STA (dest)
  213 3112:E6 00        		INC dest
  214 3114:D0 **        		BNE .22 		; $3118
  215 3116:E6 01        		INC dest+1
  216                   
  217 3118:88           .22		DEY
  218 3119:D0 F5        		BNE .23 		; #3110
  219 311B:4C 95 30     		JMP Download
  220                   
  221                   ; $311E
  222 311E:             .27
  223 311E:C9 13        		CMP #BUS_MONITOR
  224 3120:D0 **        		BNE .24			; $3132
  225 3122:A9 0A        		LDA #$0A
  226 3124:85 00        		STA dest
  227 3126:A9 02        		LDA #$02
  228 3128:85 01        		STA dest+1
  229 312A:A0 10        		LDY #$10
  230 312C:20 EB 31     		JSR $31EB
  231 312F:4C 95 30     		JMP Download
  232                   
  233                   ; $3132
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    5
                                                        00:16:03  

  234 3132:C9 12        .24		CMP #LARGE_DATA
  235 3134:D0 **        		BNE .25			; $313F
  236 3136:20 C4 31     		JSR $31C4
  237 3139:20 FA 31     		JSR $31FA
  238 313C:4C 95 30     		JMP Download
  239                   
  240                   ; 313F
  241 313F:C9 1A        .25		CMP #ROM
  242 3141:D0 **        		BNE .26			; $314C
  243 3143:20 F9 32     		JSR $32F9
  244 3146:20 5C 33     		JSR $335C
  245 3149:4C 95 30     		JMP Download
  246                   ; $314C
  247 314C:             .26
  248 314C:4C 95 30     		JMP Download
  249                   ; $314F
  250 314F:             Done
  251 314F:60           		RTS
  252                   
  253                   ; $3150
  254 3150:             Upload
  255 3150:20 95 32     .30		JSR $3295
  256 3153:C9 00        		CMP #$00
  257 3155:D0 03        		BNE $315A
  258 3157:4C C3 31     		JMP $31C3
  259                   
  260                   ; $315A
  261 315A:C9 01        .31		CMP #$01
  262 315C:D0 **        		BNE .32			; $3167
  263 315E:20 C4 31     		JSR $31C4
  264 3161:86 00        		STX dest
  265 3163:85 01        		STA dest+1
  266 3165:80 E9        		BRA .30			; $3150
  267                   
  268                   ; $3167
  269 3167:C9 02        .32		CMP #$02
  270 3169:D0 **        		BNE .33			; $3191
  271 316B:20 95 32     		JSR $3295
  272 316E:A8           		TAY
  273 316F:A5 00        		LDA dest
  274 3171:85 04        		STA $04
  275 3173:A5 01        		LDA dest+1
  276 3175:85 05        		STA $05
  277 3177:20 A9 32     		JSR $32A9
  278 317A:A9 02        		LDA #$02
  279 317C:20 9E 32     		JSR $329E
  280 317F:AD 1E 02     		LDA $021E
  281 3182:20 9E 32     		JSR $329E
  282 3185:98           		TYA
  283 3186:20 9E 32     		JSR $329E
  284 3189:20 39 32     		JSR $3239	
  285 318C:20 B9 32     		JSR $32B9
  286 318F:80 BF        		BRA .30
  287                   
  288                   ; $3191
  289 3191:C9 10        .33		CMP #$10
  290 3193:D0 **        		BNE .34			; $31AF
  291 3195:A9 03        		LDA #$03
  292 3197:85 00        		STA dest
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    6
                                                        00:16:03  

  293 3199:A9 02        		LDA #$02
  294 319B:85 01        		STA dest+1
  295 319D:A0 07        		LDY #$07
  296 319F:20 A9 32     		JSR $32A9
  297 31A2:A9 10        		LDA #$10
  298 31A4:20 9E 32     		JSR $329E
  299 31A7:20 5A 32     		JSR $325A
  300 31AA:20 B9 32     		JSR $32B9
  301 31AD:80 A1        		BRA .30
  302                   
  303                   ; $31AF
  304 31AF:C9 14        .34		CMP #TRACE		; #$14
  305 31B1:D0 **        		BNE .35			; $31B5
  306 31B3:80 9B        		BRA .30
  307                   
  308                   ; $31B5
  309 31B5:C9 1A        .35		CMP #$1A
  310 31B7:D0 **        		BNE .36			; $31C1
  311 31B9:20 F9 32     		JSR $32F9
  312 31BC:20 7C 33     		JSR $337C
  313 31BF:80 8F        		BRA .30
  314                   
  315                   ; $31C1
  316 31C1:             .36
  317 31C1:80 8D        		BRA .30
  318                   
  319                   ; $31C3
  320 31C3:60           		RTS 
  321                   
  322                   ; $31C4
  323 31C4:             ReadAddress
  324 31C4:20 95 32     		JSR $3295
  325 31C7:AA           		TAX
  326 31C8:4C 95 32     		JMP $3295
  327                   
  328                   ; $31CB
  329 31CB:             ReadRange
  330 31CB:AD 20 02     		LDA $0220
  331 31CE:D0 1B        		BNE $31EB
  332 31D0:20 78 32     		JSR $3278
  333                   ; $31D3
  334 31D3:             .38
  335 31D3:20 95 32     		JSR $3295
  336 31D6:92 02        		STA ($02)
  337 31D8:E6 02        		INC $02
  338 31DA:D0 **        		BNE .37			; $31E3
  339 31DC:64 00        		STZ dest
  340 31DE:E6 01        		INC dest+1
  341 31E0:20 78 32     		JSR $3278
  342                   
  343                   ; $31E3
  344 31E3:88           .37		DEY
  345 31E4:D0 ED        		BNE .38			; $31D3
  346 31E6:A5 02        		LDA $02
  347 31E8:85 00        		STA $00
  348 31EA:60           		RTS
  349                   
  350                   ; $31EB
  351 31EB:20 95 32     .39		JSR $3295
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    7
                                                        00:16:03  

  352 31EE:92 00        		STA ($00)
  353 31F0:E6 00        		INC dest
  354 31F2:D0 **        		BNE .3A			; $31F6
  355 31F4:E6 01        		INC dest+1
  356                   ; $31F6
  357 31F6:88           .3A		DEY
  358 31F7:D0 F2        		BNE .39			; $31EB
  359 31F9:60           		RTS
  360                   
  361                   ; $31FA
  362 31FA:AC 20 02     		LDY $0220
  363 31FD:D0 **        		BNE .43			; $3222
  364 31FF:A8           		TAY
  365                   ; $3200
  366 3200:8A           		TXA
  367 3201:F0 **        		BEQ .40			; $3204
  368 3203:C8           		INY
  369                   
  370                   ; $3204
  371 3204:20 78 32     .40		JSR $3278
  372 3207:20 95 32     .41		JSR $3295
  373 320A:92 02        		STA ($02)
  374 320C:E6 02        		INC $02
  375 320E:D0 **        		BNE .42			; $3217
  376 3210:64 00        		STZ $00
  377 3212:E6 01        		INC $01
  378 3214:20 78 32     		JSR $3278
  379                   ; $3217
  380 3217:CA           .42		DEX
  381 3218:D0 ED        		BNE .41			; $3207
  382 321A:88           		DEY
  383 321B:D0 EA        		BNE .41			; $3207
  384 321D:A5 02        		LDA $02
  385 321F:85 00        		STA $00
  386 3221:60           		RTS
  387                   
  388                   ; $3222
  389 3222:A8           .43		TAY
  390 3223:8A           		TXA
  391 3224:F0 **        		BEQ .44			; $3227
  392 3226:C8           		INY
  393                   ; $3227
  394 3227:             .44
  395 3227:20 95 32     		JSR $3295
  396 322A:92 00        		STA (dest)
  397 322C:E6 00        		INC dest
  398 322E:D0 02        		BNE $3232
  399 3230:E6 01        		INC dest+1
  400                   
  401                   ; $3232
  402 3232:CA           .45		DEX
  403 3233:D0 F2        		BNE .44			; $3227
  404 3235:88           		DEY
  405 3236:D0 EF        		BNE .44			; $3227
  406 3238:60           		RTS
  407                   
  408                   ; $3239
  409 3239:AD 20 02     		LDA $0220
  410 323C:D0 1C        		BNE $325A
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    8
                                                        00:16:03  

  411 323E:20 78 32     		JSR $3278
  412 3241:20 E3 32     		JSR $32E3
  413 3244:20 9E 32     		JSR $329E
  414 3247:E6 02        		INC $02
  415 3249:D0 07        		BNE $3252
  416 324B:64 00        		STZ dest
  417 324D:E6 01        		INC dest+1
  418 324F:20 78 32     		JSR $3278
  419 3252:88           		DEY
  420 3253:D0 EC        		BNE $3241
  421 3255:A5 02        		LDA $02
  422 3257:85 00        		STA dest
  423 3259:60           		RTS
  424                   
  425                   ; $325A
  426 325A:A5 00        		LDA dest
  427 325C:85 02        		STA $02
  428 325E:A5 01        		LDA dest+1
  429 3260:85 03        		STA $03
  430 3262:20 E3 32     		JSR $32E3
  431 3265:20 9E 32     		JSR $329E
  432 3268:E6 02        		INC $02
  433 326A:D0 04        		BNE $3270
  434                   
  435 326C:E6 03        		INC $03
  436 326E:E6 01        		INC dest+1
  437                   ; $3270
  438 3270:88           		DEY
  439 3271:D0 EF        		BNE $3262
  440 3273:A5 02        		LDA $02
  441 3275:85 00        		STA dest
  442 3277:60           		RTS
  443                   
  444                   ; $3278
  445 3278:A5 00        		LDA dest
  446 327A:85 02        		STA $02
  447 327C:A5 01        		LDA dest+1
  448 327E:30 12        		BMI $3292
  449 3280:C9 40        		CMP #$40
  450 3282:B0 0B        		BCS $328F
  451 3284:5A           		PHY
  452 3285:A0 01        		LDY #$01
  453 3287:8C E0 15     		STY $15E0
  454 328A:7A           		PLY
  455 328B:09 40        		ORA #$40
  456 328D:80 03        		BRA $3292
  457 328F:9C E0 15     		STZ $15E0
  458 3292:85 03        		STA $03
  459 3294:60           		RTS
  460                   
  461                   ; $3295
  462 3295:             ReadByte
  463 3295:AD 80 15     		LDA $1580
  464 3298:10 FB        		BPL $3295
  465 329A:AD 81 15     		LDA $1581
  466 329D:60           		RTS
  467                   
  468                   ; $329E
  469 329E:             WriteByte
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page    9
                                                        00:16:03  

  470 329E:48           		PHA
  471 329F:AD 80 15     		LDA $1580
  472 32A2:10 FB        		BPL $329F
  473 32A4:68           		PLA
  474 32A5:8D 81 15     		STA $1581
  475 32A8:60           		RTS
  476                   
  477                   ; $32A9
  478 32A9:             BeginUpload
  479 32A9:AD 80 15     		LDA $1580
  480 32AC:29 40        		AND #$40
  481 32AE:F0 F9        		BEQ $32A9
  482 32B0:9C 82 15     		STZ $1582
  483 32B3:A9 80        		LDA #$80
  484 32B5:8D 83 15     		STA $1583
  485 32B8:60           		RTS
  486                   
  487                   ; $32B9
  488 32B9:             EndUpload
  489 32B9:AD 80 15     		LDA $1580
  490 32BC:10 FB        		BPL $32B9
  491 32BE:A9 80        		LDA #$80
  492 32C0:8D 82 15     		STA $1582
  493 32C3:9C 83 15     		STZ $1583
  494 32C6:60           		RTS
  495                   
  496                   ; $32C7
  497 32C7:             InitComm
  498 32C7:48           		PHA
  499 32C8:AD 80 15     		LDA $1580
  500 32CB:29 40        		AND #$40
  501 32CD:D0 F9        		BNE $32C8
  502 32CF:A9 80        		LDA #$80
  503 32D1:8D 82 15     		STA $1582
  504 32D4:8D 83 15     		STA $1583
  505                   ; $32D7
  506 32D7:AD 80 15     		LDA $1580
  507 32DA:29 40        		AND #$40
  508 32DC:F0 F9        		BEQ $32D7
  509 32DE:9C 83 15     		STZ $1583
  510 32E1:68           		PLA
  511 32E2:60           		RTS
  512                   
  513                   ; $32E3
  514 32E3:AD 00 02     		LDA $0200
  515 32E6:D0 0E        		BNE $32F6
  516 32E8:A5 03        		LDA $03
  517 32EA:C9 FC        		CMP #$FC
  518 32EC:D0 08        		BNE $32F6
  519 32EE:A5 02        		LDA $02
  520 32F0:10 06        		BPL $32F8
  521 32F2:C9 84        		CMP #$84
  522 32F4:90 02        		BCC $32F8
  523 32F6:B2 02        		LDA ($02)
  524 32F8:60           		RTS
  525                   
  526                   ; $32F9
  527 32F9:20 C4 31     		JSR $31C4
  528 32FC:8E D0 15     		STX $15D0
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page   10
                                                        00:16:03  

  529 32FF:8D D1 15     		STA $15D1
  530 3302:20 95 32     		JSR $3295
  531 3305:8D D2 15     		STA $15D2
  532 3308:20 95 32     		JSR $3295
  533 330B:49 FF        		EOR #$FF
  534 330D:8D 21 02     		STA $0221
  535 3310:20 95 32     		JSR $3295
  536 3313:49 FF        		EOR #$FF
  537 3315:8D 22 02     		STA $0222
  538 3318:20 95 32     		JSR $3295
  539 331B:49 FF        		EOR #$FF
  540 331D:8D 23 02     		STA $0223
  541 3320:20 95 32     		JSR $3295
  542 3323:AA           		TAX
  543 3324:30 0F        		BMI $3335
  544 3326:29 07        		AND #$07
  545 3328:8D 24 02     		STA $0224
  546 332B:A9 00        		LDA #$00
  547 332D:85 04        		STA $04
  548 332F:A9 10        		LDA #$10
  549 3331:85 05        		STA $05
  550 3333:80 0D        		BRA $3342
  551 3335:29 07        		AND #$07
  552 3337:8D 25 02     		STA $0225
  553 333A:A9 01        		LDA #$01
  554 333C:85 04        		STA $04
  555 333E:A9 10        		LDA #$10
  556 3340:85 05        		STA $05
  557 3342:AD 24 02     		LDA $0224
  558 3345:29 07        		AND #$07
  559 3347:8D 27 02     		STA $0227
  560 334A:AD 25 02     		LDA $0225
  561 334D:29 07        		AND #$07
  562                   ; $334F
  563 334F:0A           		ASL
  564 3350:0A           		ASL
  565 3351:0A           		ASL
  566 3352:0D 27 02     		ORA $0227
  567 3355:8D D3 15     		STA $15D3
  568 3358:8D 26 02     		STA $0226
  569 335B:60           		RTS
  570                   
  571                   ; $335C
  572 335C:9C D3 15     		STZ $15D3
  573                   ; $335F
  574 335F:EE 21 02     		INC $0221
  575 3362:D0 11        		BNE $3375
  576 3364:EE 22 02     		INC $0222
  577 3367:D0 0C        		BNE $3375
  578 3369:EE 23 02     		INC $0223
  579 336C:D0 07        		BNE $3375
  580 336E:AD 26 02     		LDA $0226
  581 3371:8D D3 15     		STA $15D3
  582 3374:60           		RTS
  583                   
  584                   ; $3375
  585 3375:20 95 32     		JSR $3295
  586 3378:92 04        		STA ($04)
  587 337A:80 E3        		BRA $335F
Epyx HandyAsm 1.12      howard.src                      10-Aug-12500:16:03 Page   11
                                                        00:16:03  

  588 337C:20 A9 32     		JSR $32A9
  589 337F:AD 20 02     		LDA $0220
  590 3382:D0 03        		BNE $3387
  591 3384:9C D3 15     		STZ $15D3
  592 3387:EE 21 02     		INC $0221
  593 338A:D0 14        		BNE $33A0
  594 338C:EE 22 02     		INC $0222
  595 338F:D0 0F        		BNE $33A0
  596 3391:EE 23 02     		INC $0223
  597 3394:D0 0A        		BNE $33A0
  598 3396:AD 26 02     		LDA $0226
  599 3399:8D D3 15     		STA $15D3
  600 339C:20 B9 32     		JSR $32B9
  601 339F:60           		RTS
  602                   
  603 33A0:B2 04        		LDA ($04)
  604 33A2:20 9E 32     		JSR $329E
  605 33A5:80 E0        		BRA $3387
  606                   
Epyx HandyAsm 1.12      Symbols                         10-Aug-12500:16:03 Page   12
                                                        00:16:03  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 A_OFFSET                          $0000 BACKGROUND_SPRITE
$0001 BACKNONCOLL_SPRITE                $0000 BACK_SHADOW_SPRITE
$0200 BASE_ORG                          MACRO BEGIN_ALLOCATE_ZEROPAGE
MACRO BEGIN_ZPAGE                       $00C0 BITS_MASK
$FDB0 BLUERED0                          $FDB1 BLUERED1
$FDB2 BLUERED2                          $FDB3 BLUERED3
$FDB4 BLUERED4                          $FDB5 BLUERED5
$FDB6 BLUERED6                          $FDB7 BLUERED7
$FDB8 BLUERED8                          $FDB9 BLUERED9
$FDBA BLUEREDA                          $FDBB BLUEREDB
$FDBC BLUEREDC                          $FDBD BLUEREDD
$FDBE BLUEREDE                          $FDBF BLUEREDF
$0002 BORROW_IN                         $0001 BORROW_OUT
$0003 BOUNDARY_SPRITE                   $0015 BREAK_CONTROLS
$0002 BSHADOW_SPRITE                    $0013 BUS_MONITOR
$0002 B_BUTTON                          $32A9 BeginUpload
$0002 CART0_IO_INACTIVE                 $0004 CART1_IO_INACTIVE
$0002 CART_ADDR_DATA                    $0001 CART_ADDR_STROBE
$0002 CART_POWER_OFF                    $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $0003 CONTINUE_REQUEST
$FD91 CPUSLEEP                          $FFFE CPU_IRQ
$FFFA CPU_NMI                           $FFFC CPU_RESET
$0002 DATA                              $FD95 DISPADRH
$FD94 DISPADRL                          $FD92 DISPCTL
$1FE0 DISPLAY_BUFSIZE                   $0008 DISP_COLOR
$0002 DISP_FLIP                         $0004 DISP_FOURBIT
$0001 DMA_ENABLE                        $0001 DOWNLOAD_REQUEST
$0001 DRAW_LEFT                         $0002 DRAW_UP
$314F Done                              $3095 Download
$0008 ENABLE_COUNT                      $0080 ENABLE_INT
$0020 ENABLE_INTEGRATE                  $0010 ENABLE_RELOAD
MACRO END_ALLOCATE_ZEROPAGE             $0000 END_OF_FILE
MACRO END_ZPAGE                         $0004 EVER_ON
$0001 EXTERNAL_POWER                    $32B9 EndUpload
$0080 FEEDBACK_7                        $0011 FILL_MEM
$0004 FLIP_BUTTON                       $00C0 FOUR_PER_PIXEL
$0004 FRAMERR                           $0005 GO_REQUEST
$FDA0 GREEN0                            $FDA1 GREEN1
$FDA2 GREEN2                            $FDA3 GREEN3
$FDA4 GREEN4                            $FDA5 GREEN5
Epyx HandyAsm 1.12      Symbols                         10-Aug-12500:16:03 Page   13
                                                        00:16:03  

$FDA6 GREEN6                            $FDA7 GREEN7
$FDA8 GREEN8                            $FDA9 GREEN9
$FDAA GREENA                            $FDAB GREENB
$FDAC GREENC                            $FDAD GREEND
$FDAE GREENE                            $FDAF GREENF
$FC00 HARDWARE_START                    $FD00 HCOUNT
$0020 HFLIP                             $0001 HI
$0007 HIDE_HOWARD_REQUEST               $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$0016 HOWARD_ABUS                       $0017 HOWARD_BBUS
$0018 HOWARD_CBUS                       $0019 HOWARD_DBUS
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         $FC29 HSIZOFFH
$FC28 HSIZOFFL                          $0002 INNER_BUTTON
$FD80 INTRST                            $FD81 INTSET
$FD8B IODAT                             $FD8A IODIR
$FCC3 IOData                            $FCC2 IOStatus
$32C7 InitComm                          $FBF0 IntTable
$FCB0 JOYSTICK                          $0080 JOY_DOWN
$0010 JOY_LEFT                          $0020 JOY_RIGHT
$0040 JOY_UP                            $0012 LARGE_DATA
$0004 LAST_CLOCK                        $FCC0 LEDS
$0010 LEFT0_SELECT                      $0020 LEFT1_SELECT
$0040 LEFT2_SELECT                      $0080 LEFT3_SELECT
$0008 LEFTHAND                          $0008 LEFTHANDED
$00F0 LEFT_ATTENMASK                    $0080 LITERAL
$0000 LO                                $FFF9 MAPCTL
$FC55 MATHA                             $FC54 MATHB
$FC53 MATHC                             $0020 MATHCARRY
$FC52 MATHD                             $FC63 MATHE
$FC62 MATHF                             $FC61 MATHG
$FC60 MATHH                             $FC6F MATHJ
$FC6E MATHK                             $FC6D MATHL
$FC6C MATHM                             $FC57 MATHN
$FC56 MATHP                             $0040 MATHWARNING
$0080 MATHWORKING                       $FD88 MIKEYHREV
$FD89 MIKEYSREV                         $FD00 MIKEY_BASE
$0002 MIKEY_SPACE                       $0010 MONITOR_BYTECOUNT
$0001 MONITOR_I                         $F900 MONITOR_RAM_RESERVED
$00F8 MONITOR_ZP_RESERVED               $FD44 MPAN
$FD50 MSTEREO                           $FD9C MTEST0
$FD9D MTEST1                            $FD9E MTEST2
$3029 Main                              $0004 NEXTZPG
$3000 NMI_ORG                           $0004 NOEXP
$0005 NONCOLL_SPRITE                    $0000 NOP_REQUEST
$0004 NORMAL_SPRITE                     $0020 NO_COLLIDE
$3000 NmiHandler                        $0000 ONE_PER_PIXEL
$0008 OPTION1_BUTTON                    $0004 OPTION2_BUTTON
$0001 ORIGIN                            $0001 OUTER_BUTTON
$0008 OVERRUN                           $0001 PARBIT
$0010 PAREN                             $0010 PARERR
$0001 PAREVEN                           $0001 PAUSE_SWITCH
$FD93 PBKUP                             $0004 PC_OFFSET
$0002 POWERON                           $FC2F PROCADRH
$FC2E PROCADRL                          $0006 P_OFFSET
$FCB2 RCART_0                           $FCB3 RCART_1
$0010 READ_ENABLE                       $0010 REGISTER
$0007 REGISTER_BYTECOUNT                $0010 RELOAD_HV
$0020 RELOAD_HVS                        $0030 RELOAD_HVST
Epyx HandyAsm 1.12      Symbols                         10-Aug-12500:16:03 Page   14
                                                        00:16:03  

$0030 RELOAD_MASK                       $0000 RELOAD_NONE
$0008 RESETERR                          $0040 RESET_DONE
$0008 RESTART_BUTTON                    $0008 RESTLESS
$0008 REUSE_PALETTE                     $0001 RIGHT0_SELECT
$0002 RIGHT1_SELECT                     $0004 RIGHT2_SELECT
$0008 RIGHT3_SELECT                     $000F RIGHT_ATTENMASK
$001A ROM                               $019A ROM_HEADER_SIZE
$0004 ROM_SPACE                         $0003 RUN_ADDRESS
$0002 RXBRK                             $0040 RXINTEN
$0040 RXRDY                             $31C4 ReadAddress
$3295 ReadByte                          $31CB ReadRange
$0201 RunAddr                           $FC2D SCBADRH
$FC2C SCBADRL                           $FC11 SCBNEXTH
$FC10 SCBNEXTL                          $FC23 SCVPOSH
$FC22 SCVPOSL                           $FD90 SDONEACK
$0006 SEE_HOWARD_REQUEST                $FD8C SERCTL
$FD8D SERDAT                            $FD10 SERIALRATE
$0010 SERIAL_INT                        $0007 SHADOW_SPRITE
$0080 SIGNMATH                          $0004 SKIP_SPRITE
$0004 SLAVE_REQUEST                     $FC82 SPRCOLL
$FC80 SPRCTL0                           $FC81 SPRCTL1
$FC13 SPRDLINEH                         $FC12 SPRDLINEL
$FC21 SPRDOFFH                          $FC20 SPRDOFFL
$FC91 SPRGO                             $FC19 SPRHSIZH
$FC18 SPRHSIZL                          $FC83 SPRINIT
$0002 SPRITESTOP                        $0002 SPRITETOSTOP
$0001 SPRITEWORKING                     $0001 SPRITE_GO
$FC92 SPRSYS                            $FC1B SPRVSIZH
$FC1A SPRVSIZL                          $FC1D STRETCHH
$FC1C STRETCHL                          $FC90 SUZYBUSEN
$FC88 SUZYHREV                          $FC89 SUZYSREV
$FC00 SUZY_BASE                         $0001 SUZY_SPACE
$FCB1 SWITCHES                          $FD87 SYSCTL1
$0003 S_OFFSET                          $0203 SaveA
$0207 SavePCHi                          $0208 SavePCLo
$0209 SavePS                            $0206 SaveSP
$0204 SaveX                             $0205 SaveY
$FFFE TEMPORG                           $0080 THREE_PER_PIXEL
$FC03 TILTACUMH                         $FC02 TILTACUML
$FC1F TILTH                             $FC1E TILTL
$FD00 TIMER0                            $0001 TIMER0_INT
$FD04 TIMER1                            $0002 TIMER1_INT
$FD08 TIMER2                            $0004 TIMER2_INT
$FD0C TIMER3                            $0008 TIMER3_INT
$FD10 TIMER4                            $FD14 TIMER5
$0020 TIMER5_INT                        $FD18 TIMER6
$0040 TIMER6_INT                        $FD1C TIMER7
$0080 TIMER7_INT                        $0008 TIMER_DONE
$0000 TIM_BACKUP                        $0001 TIM_CONTROLA
$0003 TIM_CONTROLB                      $0002 TIM_COUNT
$FC01 TMPADRH                           $FC00 TMPADRL
$0014 TRACE                             $0080 TURBO_DISABLE
$0040 TWO_PER_PIXEL                     $0002 TXBRK
$0020 TXEMPTY                           $0080 TXINTEN
$0004 TXOPEN                            $0080 TXRDY
$0004 UNSAFEACCESS                      $0004 UNSAFEACCESSRST
$0002 UPLOAD_REQUEST                    $0002 UP_CURRENT_PAGE
$0005 UP_HAHDATA                        $0004 UP_MEMWATCH
$0003 UP_REGISTERS                      $0001 UP_THIS_PAGE
Epyx HandyAsm 1.12      Symbols                         10-Aug-12500:16:03 Page   15
                                                        00:16:03  

$0200 Unknown                           $3150 Upload
$FD08 VCOUNT                            $0008 VECTOR_SPACE
$0004 VERTICAL_INT                      $0010 VFLIP
$FC0D VIDADRH                           $FC0C VIDADRL
$FC09 VIDBASH                           $FC08 VIDBASL
$FC07 VOFFH                             $FC06 VOFFL
$FC17 VPOSSTRTH                         $FC16 VPOSSTRTL
$FC27 VSIZACUMH                         $FC26 VSIZACUML
$FC2B VSIZOFFH                          $FC2A VSIZOFFL
$0010 VSTRETCH                          $0010 VSTRETCHING
$329E WriteByte                         $0006 XOR_SHADOW_SPRITE
$0006 XOR_SPRITE                        $0001 X_OFFSET
$0002 Y_OFFSET                          $0000 dest
$0002 dest_old                          
