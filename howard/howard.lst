Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    1
                                                        02:00:54  

    1                   * ====================================================
    2                   
    3                   	.LIST OFF
   10                   	.LIST ON
   11                   
   12      0000         LO				.EQ 0
   13      0001         HI				.EQ 1
   14                   
   15                   	BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
   16                   
   17 0000:             dest			.DS 2	; 00-01
   18 0002:             dest_old		.DS 2	; 02-03
   19 0004:             dest_old2		.DS 2	; 04-05
   20                   
   21                   	END_ZPAGE
    1      0006       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0006:           + 	  .ORG TEMPORG
    6                 + 
   22                   
   23      0200         BASE_ORG		.EQ $0200
   24      3000         NMI_ORG			.EQ $3000
   25                   
   26 FFFE:             		.ORG BASE_ORG
   27                   
   28 0200:             Unknown			.DS 1	; 
   29 0201:             RunAddr			.DS 2
   30 0203:             SaveA			.DS 1	; $0203
   31 0204:             SaveX			.DS 1	; $0204
   32 0205:             SaveY			.DS 1	; $0205
   33 0206:             SaveSP			.DS 1	; $0206
   34 0207:             SavePCHi		.DS 1	; $0207
   35 0208:             SavePCLo		.DS 1	; $0208
   36 0209:             SavePS			.DS 1	; $0209
   37 020A:             SaveBusMonitor	.DS MONITOR_BYTECOUNT	; $020A
   38                   ;$020A-$0219	Monitor values
   39                   
   40                   ; $021E
   41 021A:             		.ORG BASE_ORG+$20
   42                   
   43 0220:             HowardEnabled	.DS 1	; Howard board enabled (0 = No, 1 
   44                   
   45                   ; $0221-$0223: 24-bit counter (inverted data, suggesti
   46                   
   47 0221:             		.ORG $15D0
   48                   
   49                   ; $15D0-$15D2: ROM configuration (address, size parame
   50                   ; $15D3: ROM bank/page control register
   51                   ; $15E0: bank switching?
   52                   
   53                   * ====================================================
   54                   
   55 15D0:             		.ORG NMI_ORG
   56                   		.RUN *
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    2
                                                        02:00:54  

   57                   
   58 3000:             NmiHandler	; $3000
   59 3000:D8           		CLD
   60 3001:8D 03 02     		STA SaveA 			; Store accumulator, X and Y register f
   61 3004:8E 04 02     		STX SaveX
   62 3007:8C 05 02     		STY SaveY
   63 300A:68           		PLA 				; Get PC, ReturnHi, ReturnLo from stack
   64 300B:FA           		PLX
   65 300C:7A           		PLY
   66 300D:8D 09 02     		STA SavePS			; Store for inspection
   67 3010:8E 07 02     		STX SavePCHi
   68 3013:8C 08 02     		STY SavePCLo
   69 3016:BA           		TSX					; Store stack pointer 
   70 3017:8E 06 02     		STX SaveSP
   71                   
   72                   ; Silence all audio channels	$301A
   73 301A:9C 20 FD     		STZ AUDIO0+AUD_VOLCNTRL
   74 301D:9C 28 FD     		STZ AUDIO1+AUD_VOLCNTRL
   75 3020:9C 30 FD     		STZ AUDIO2+AUD_VOLCNTRL
   76 3023:9C 38 FD     		STZ AUDIO3+AUD_VOLCNTRL
   77                   
   78                   ; $3026
   79 3026:20 ** **     		JSR InitComm		; $32C7
   80                   
   81 3029:             Main	; $3029
   82 3029:20 ** **     		JSR ReadByte		; Read byte from parallel port
   83                   
   84 302C:C9 01        		CMP #DOWNLOAD_REQUEST ; Control command: 01 means "D
   85 302E:D0 **        		BNE .2	
   86 3030:20 ** **     		JSR Download		; Control loop for downloading files f
   87 3033:80 F4        		BRA Main			; Next command
   88                   
   89                   ; $3035
   90 3035:C9 02        .2		CMP #UPLOAD_REQUEST	; Control command: 02 means "U
   91 3037:D0 **        		BNE .5
   92 3039:20 ** **     		JSR Upload			; Control loop for uploading data from 
   93 303C:80 EB        		BRA Main			; Next command
   94                   
   95 303E:C9 05        .5		CMP #GO_REQUEST		; Control command: 05 means "Go"
   96 3040:D0 **        		BNE .3				; Check whether to return from NMI
   97 3042:A9 04        		LDA #TXOPEN			; Turn off serial IRQs before starting
   98 3044:8D 8C FD     		STA SERCTL			; and make sure serial port is open-col
   99 3047:80 **        		BRA .9
  100                   
  101                   ; $3049
  102 3049:C9 03        .3		CMP #CONTINUE_REQUEST
  103 304B:D0 **        		BNE .4
  104                   
  105                   ; Restore all previous values and return from NMI hand
  106 304D:AE 06 02     .9		LDX SaveSP		; Restore stack pointer
  107 3050:9A           		TXS
  108 3051:AD 08 02     		LDA SavePCLo	.DS 1	; $0208
  109 3054:48           		PHA
  110 3055:AD 07 02     		LDA SavePCHi	.DS 1	; $0207
  111 3058:48           		PHA
  112 3059:AD 09 02     		LDA SavePS		.DS 1	; $0209
  113 305C:48           		PHA
  114 305D:AD 03 02     		LDA SaveA		; Load stored values for A, X, Y 
  115 3060:AE 04 02     		LDX SaveX
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    3
                                                        02:00:54  

  116 3063:AC 05 02     		LDY SaveY
  117 3066:40           		RTI
  118                   
  119                   ; $3067
  120 3067:C9 04        .4		CMP #SLAVE_REQUEST
  121 3069:D0 **        		BNE .6
  122 306B:20 ** **     		JSR BeginUpload
  123 306E:A9 00        		LDA #$00
  124 3070:20 ** **     		JSR WriteByte	; Zero (A) to page 1
  125 3073:20 ** **     		JSR EndUpload
  126 3076:4C 29 30     		JMP Main		; Next control command
  127                   
  128                   ; $3079
  129 3079:C9 06        .6		CMP #SEE_HOWARD_REQUEST
  130 307B:D0 **        		BNE .7
  131 307D:A9 01        		LDA #$01
  132 307F:8D 20 02     		STA HowardEnabled
  133 3082:9C E0 15     		STZ $15E0
  134 3085:4C 29 30     		JMP Main
  135                   
  136                   ; #3088
  137 3088:C9 07        .7		CMP #HIDE_HOWARD_REQUEST
  138 308A:D0 **        		BNE .8
  139 308C:9C 20 02     		STZ HowardEnabled
  140 308F:4C 29 30     		JMP Main
  141                   
  142                   ; $3092
  143 3092:4C 29 30     .8		JMP Main		; Next control command
  144                   
  145                   ; Control loop for downloading bin from Handebug to Ho
  146 3095:             Download
  147                   ; $3095
  148 3095:20 ** **     		JSR ReadByte
  149                   
  150                   ; $3098
  151 3098:C9 00        		CMP #END_OF_FILE ; End of .bin file
  152 309A:D0 **        		BNE .11			; $309F
  153 309C:4C ** **     		JMP Done		; $314F
  154                   
  155                   ; $309F
  156 309F:C9 01        .11		CMP #ORIGIN		; Receive load address (1)
  157 30A1:D0 **        		BNE .12			; $30AC
  158 30A3:20 ** **     		JSR ReadAddress ; Read address from parallel port to
  159 30A6:86 00        		STX dest
  160 30A8:85 01        		STA dest+1
  161 30AA:80 E9        		BRA Download	; $3095
  162                   
  163                   ; $30AC
  164 30AC:C9 02        .12		CMP #DATA		; Load data of max 1-255 bytes (2)
  165 30AE:D0 **        		BNE .13
  166 30B0:20 ** **     		JSR ReadByte	; Read byte from parallel port 
  167 30B3:20 ** **     		JSR ReadByte	; and another one, discarding first (po
  168 30B6:A8           		TAY
  169 30B7:20 ** **     		JSR ReadRange	; Read Y number of bytes and store in 
  170 30BA:80 D9        		BRA Download
  171                   
  172 30BC:C9 03        .13		CMP #RUN_ADDRESS	; Receive run address (3)
  173 30BE:D0 **        		BNE .14			; $30CB
  174 30C0:20 ** **     		JSR ReadAddress ; Read two bytes to X and A
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    4
                                                        02:00:54  

  175 30C3:8E 01 02     		STX RunAddr		; Store in a special place
  176 30C6:8D 02 02     		STA RunAddr+1
  177 30C9:80 CA        		BRA Download
  178                   
  179                   ; 30CB
  180 30CB:C9 10        .14		CMP #REGISTER	; Read registers from Amiga/PC
  181 30CD:D0 **        		BNE .15			; 
  182 30CF:A9 03        		LDA #<SaveA		; #$03 Store $0203 as address in $00, $
  183 30D1:85 00        		STA dest
  184 30D3:A9 02        		LDA #>SaveA		; #$02
  185 30D5:85 01        		STA dest+1
  186 30D7:A0 07        		LDY #REGISTER_BYTECOUNT	; Read 7 bytes to $0203
  187 30D9:20 ** **     		JSR ReceiveRange
  188 30DC:80 B7        		BRA Download
  189                   
  190                   ; $30DE
  191 30DE:C9 11        .15		CMP #FILL_MEM	; Fill Range with value: 11 Value L
  192 30E0:D0 **        		BNE .27			; $311E
  193 30E2:20 ** **     		JSR ReadByte	; Read fill value
  194 30E5:48           		PHA
  195 30E6:20 ** **     		JSR ReadAddress	; Read destination address
  196 30E9:86 00        		STX dest
  197 30EB:85 01        		STA dest+1
  198 30ED:20 ** **     		JSR ReadByte	; Read count #3295
  199 30F0:A8           		TAY
  200 30F1:AD 20 02     		LDA HowardEnabled	; Is Howard board enabled?
  201 30F4:D0 19        		BNE $310F
  202 30F6:20 78 32     		JSR $3278		; Memory map range
  203 30F9:68           		PLA
  204                   ; $30FA
  205 30FA:92 02        .20		STA (dest_old)		; Store at address in ($02)
  206 30FC:E6 02        		INC dest_old
  207 30FE:D0 **        		BNE .21
  208 3100:64 00        		STZ dest
  209 3102:E6 01        		INC dest+1
  210 3104:48           		PHA
  211                   ; $3105
  212 3105:20 78 32     		JSR $3278
  213 3108:68           		PLA
  214                   ; $3109
  215 3109:88           .21		DEY
  216 310A:D0 EE        		BNE .20			; $30FA
  217 310C:4C 95 30     		JMP Download
  218                   
  219                   ; $310F	Read when Howard board is enabled?
  220 310F:68           		PLA				; Holds fill value
  221 3110:             .23
  222 3110:92 00        		STA (dest)
  223 3112:E6 00        		INC dest
  224 3114:D0 **        		BNE .22 		; $3118
  225 3116:E6 01        		INC dest+1
  226                   
  227 3118:88           .22		DEY
  228 3119:D0 F5        		BNE .23 		; #3110
  229 311B:4C 95 30     		JMP Download
  230                   
  231                   ; $311E
  232 311E:             .27
  233 311E:C9 13        		CMP #BUS_MONITOR
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    5
                                                        02:00:54  

  234 3120:D0 **        		BNE .24			; $3132
  235 3122:A9 0A        		LDA #<SaveBusMonitor
  236 3124:85 00        		STA dest
  237 3126:A9 02        		LDA #>SaveBusMonitor
  238 3128:85 01        		STA dest+1
  239 312A:A0 10        		LDY #MONITOR_BYTECOUNT
  240 312C:20 ** **     		JSR ReceiveRange	; $31EB
  241 312F:4C 95 30     		JMP Download
  242                   
  243                   ; $3132
  244 3132:C9 12        .24		CMP #LARGE_DATA
  245 3134:D0 **        		BNE .25			; $313F
  246 3136:20 ** **     		JSR ReadAddress		; Read length
  247 3139:20 FA 31     		JSR $31FA			; Handle large data routine
  248 313C:4C 95 30     		JMP Download
  249                   
  250                   ; 313F
  251 313F:C9 1A        .25		CMP #ROM
  252 3141:D0 **        		BNE .26			; $314C
  253 3143:20 F9 32     		JSR $32F9
  254 3146:20 5C 33     		JSR $335C
  255 3149:4C 95 30     		JMP Download
  256                   ; $314C
  257 314C:             .26
  258 314C:4C 95 30     		JMP Download
  259                   ; $314F
  260 314F:             Done
  261 314F:60           		RTS
  262                   
  263                   ; $3150
  264 3150:             Upload
  265 3150:20 ** **     .30		JSR ReadByte
  266 3153:C9 00        		CMP #END_OF_FILE
  267 3155:D0 **        		BNE .31			; $315A
  268 3157:4C ** **     		JMP UploadDone	; $31C3
  269                   
  270                   ; $315A
  271 315A:C9 01        .31		CMP #ORIGIN
  272 315C:D0 **        		BNE .32			; $3167
  273 315E:20 ** **     		JSR ReadAddress
  274 3161:86 00        		STX dest
  275 3163:85 01        		STA dest+1
  276 3165:80 E9        		BRA .30			; $3150
  277                   
  278                   ; $3167
  279 3167:C9 02        .32		CMP #DATA
  280 3169:D0 **        		BNE .33			; $3191
  281 316B:20 ** **     		JSR ReadByte
  282 316E:A8           		TAY
  283 316F:A5 00        		LDA dest
  284 3171:85 04        		STA dest_old2
  285 3173:A5 01        		LDA dest+1
  286 3175:85 05        		STA dest_old2+1
  287 3177:20 ** **     		JSR BeginUpload
  288 317A:A9 02        		LDA #$02
  289 317C:20 ** **     		JSR WriteByte
  290 317F:AD 1E 02     		LDA $021E		; Similar to $FBB9 in monitor.src (versio
  291 3182:20 ** **     		JSR WriteByte
  292 3185:98           		TYA
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    6
                                                        02:00:54  

  293 3186:20 ** **     		JSR WriteByte	; Length
  294 3189:20 39 32     		JSR $3239
  295 318C:20 ** **     		JSR EndUpload
  296 318F:80 BF        		BRA .30
  297                   
  298                   ; $3191
  299 3191:C9 10        .33		CMP #$10
  300 3193:D0 **        		BNE .34			; $31AF
  301 3195:A9 03        		LDA #$03
  302 3197:85 00        		STA dest
  303 3199:A9 02        		LDA #$02
  304 319B:85 01        		STA dest+1
  305 319D:A0 07        		LDY #$07
  306 319F:20 ** **     		JSR BeginUpload
  307 31A2:A9 10        		LDA #$10
  308 31A4:20 ** **     		JSR WriteByte
  309 31A7:20 5A 32     		JSR $325A
  310 31AA:20 ** **     		JSR EndUpload
  311 31AD:80 A1        		BRA .30
  312                   
  313                   ; $31AF
  314 31AF:C9 14        .34		CMP #TRACE		; #$14
  315 31B1:D0 **        		BNE .35			; $31B5
  316 31B3:80 9B        		BRA .30
  317                   
  318                   ; $31B5
  319 31B5:C9 1A        .35		CMP #$1A
  320 31B7:D0 **        		BNE .36			; $31C1
  321 31B9:20 F9 32     		JSR $32F9
  322 31BC:20 7C 33     		JSR $337C
  323 31BF:80 8F        		BRA .30
  324                   
  325                   ; $31C1
  326 31C1:             .36
  327 31C1:80 8D        		BRA .30
  328                   
  329                   ; $31C3
  330 31C3:             UploadDone
  331 31C3:60           		RTS 
  332                   
  333                   ; $31C4
  334 31C4:             ReadAddress
  335 31C4:20 ** **     		JSR ReadByte
  336 31C7:AA           		TAX
  337 31C8:4C ** **     		JMP ReadByte
  338                   
  339                   ; $31CB
  340 31CB:             ReadRange
  341 31CB:AD 20 02     		LDA HowardEnabled
  342 31CE:D0 **        		BNE ReceiveRange
  343 31D0:20 78 32     		JSR $3278
  344                   ; $31D3
  345 31D3:             .38
  346 31D3:20 ** **     		JSR ReadByte
  347 31D6:92 02        		STA ($02)
  348 31D8:E6 02        		INC $02
  349 31DA:D0 **        		BNE .37			; $31E3
  350 31DC:64 00        		STZ dest
  351 31DE:E6 01        		INC dest+1
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    7
                                                        02:00:54  

  352 31E0:20 78 32     		JSR $3278
  353                   
  354                   ; $31E3
  355 31E3:88           .37		DEY
  356 31E4:D0 ED        		BNE .38			; $31D3
  357 31E6:A5 02        		LDA $02
  358 31E8:85 00        		STA $00
  359 31EA:60           		RTS
  360                   
  361                   ; $31EB
  362 31EB:             ReceiveRange	; Register Y is number of bytes to read
  363 31EB:20 ** **     .39		JSR ReadByte
  364 31EE:92 00        		STA (dest)
  365 31F0:E6 00        		INC dest
  366 31F2:D0 **        		BNE .3A			; $31F6
  367 31F4:E6 01        		INC dest+1
  368                   ; $31F6
  369 31F6:88           .3A		DEY
  370 31F7:D0 F2        		BNE .39			; $31EB
  371 31F9:60           		RTS
  372                   
  373                   ; $31FA
  374                   ; Large data handling routine
  375 31FA:AC 20 02     		LDY HowardEnabled
  376 31FD:D0 **        		BNE .43			; $3222
  377                   
  378 31FF:A8           		TAY
  379 3200:8A           		TXA
  380 3201:F0 **        		BEQ .40			; $3204
  381 3203:C8           		INY
  382 3204:20 78 32     .40		JSR $3278
  383 3207:20 ** **     .41		JSR ReadByte
  384 320A:92 02        		STA ($02)
  385 320C:E6 02        		INC $02
  386 320E:D0 **        		BNE .42			; $3217
  387 3210:64 00        		STZ $00
  388 3212:E6 01        		INC $01
  389 3214:20 78 32     		JSR $3278
  390                   ; $3217
  391 3217:CA           .42		DEX
  392 3218:D0 ED        		BNE .41			; $3207
  393 321A:88           		DEY
  394 321B:D0 EA        		BNE .41			; $3207
  395 321D:A5 02        		LDA $02
  396 321F:85 00        		STA $00
  397 3221:60           		RTS
  398                   
  399                   ; $3222		Howard board is enabled
  400 3222:A8           .43		TAY
  401 3223:8A           		TXA
  402 3224:F0 **        		BEQ .44			; $3227
  403 3226:C8           		INY
  404 3227:20 ** **     .44		JSR ReadByte
  405 322A:92 00        		STA (dest)
  406 322C:E6 00        		INC dest
  407 322E:D0 **        		BNE .45
  408 3230:E6 01        		INC dest+1
  409 3232:CA           .45		DEX
  410 3233:D0 F2        		BNE .44			; $3227
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    8
                                                        02:00:54  

  411 3235:88           		DEY
  412 3236:D0 EF        		BNE .44			; $3227
  413 3238:60           		RTS
  414                   
  415                   ; $3239
  416 3239:             WriteRange
  417 3239:AD 20 02     		LDA HowardEnabled
  418 323C:D0 1C        		BNE $325A
  419 323E:20 78 32     		JSR $3278		; Memory switch
  420                   ; $3241
  421 3241:20 E3 32     		JSR $32E3
  422 3244:20 ** **     		JSR WriteByte
  423 3247:E6 02        		INC $02
  424 3249:D0 07        		BNE $3252
  425 324B:64 00        		STZ dest
  426 324D:E6 01        		INC dest+1
  427 324F:20 78 32     		JSR $3278		; Memory switch
  428                   ; $3252
  429 3252:88           		DEY
  430 3253:D0 EC        		BNE $3241
  431 3255:A5 02        		LDA dest_old
  432 3257:85 00        		STA dest
  433 3259:60           		RTS
  434                   
  435                   ; $325A
  436 325A:A5 00        		LDA dest
  437 325C:85 02        		STA $02
  438 325E:A5 01        		LDA dest+1
  439 3260:85 03        		STA $03
  440 3262:20 E3 32     		JSR $32E3
  441 3265:20 ** **     		JSR WriteByte
  442 3268:E6 02        		INC $02
  443 326A:D0 04        		BNE $3270
  444                   
  445 326C:E6 03        		INC $03
  446 326E:E6 01        		INC dest+1
  447                   ; $3270
  448 3270:88           		DEY
  449 3271:D0 EF        		BNE $3262
  450 3273:A5 02        		LDA $02
  451 3275:85 00        		STA dest
  452 3277:60           		RTS
  453                   
  454                   ; $3278
  455                   ; Memory mapping function from dest to dest_old
  456 3278:A5 00        		LDA dest
  457 327A:85 02        		STA $02
  458 327C:A5 01        		LDA dest+1
  459 327E:30 12        		BMI $3292		; Normal memory for $8000 and higher
  460 3280:C9 40        		CMP #$40
  461 3282:B0 0B        		BCS $328F		; Skip when dest+1 is $40-$7F
  462 3284:5A           		PHY
  463 3285:A0 01        		LDY #$01
  464 3287:8C E0 15     		STY $15E0		; Switch to other memory
  465 328A:7A           		PLY
  466 328B:09 40        		ORA #$40		; Set $40 flag?
  467 328D:80 03        		BRA $3292
  468                   ; $328F
  469 328F:9C E0 15     		STZ $15E0
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page    9
                                                        02:00:54  

  470                   ; $3292
  471 3292:85 03        		STA $03
  472 3294:60           		RTS
  473                   
  474                   ; $3295
  475 3295:             ReadByte
  476 3295:AD 80 15     		LDA $1580
  477 3298:10 FB        		BPL ReadByte
  478 329A:AD 81 15     		LDA $1581
  479 329D:60           		RTS
  480                   
  481                   ; $329E
  482 329E:             WriteByte
  483 329E:48           		PHA
  484 329F:AD 80 15     		LDA $1580
  485 32A2:10 FB        		BPL $329F
  486 32A4:68           		PLA
  487 32A5:8D 81 15     		STA $1581
  488 32A8:60           		RTS
  489                   
  490                   ; $32A9
  491 32A9:             BeginUpload
  492 32A9:AD 80 15     		LDA $1580
  493 32AC:29 40        		AND #$40
  494 32AE:F0 F9        		BEQ BeginUpload
  495 32B0:9C 82 15     		STZ $1582
  496 32B3:A9 80        		LDA #$80
  497 32B5:8D 83 15     		STA $1583
  498 32B8:60           		RTS
  499                   
  500                   ; $32B9
  501 32B9:             EndUpload
  502 32B9:AD 80 15     		LDA $1580
  503 32BC:10 FB        		BPL EndUpload
  504 32BE:A9 80        		LDA #$80
  505 32C0:8D 82 15     		STA $1582
  506 32C3:9C 83 15     		STZ $1583
  507 32C6:60           		RTS
  508                   
  509                   ; $32C7
  510 32C7:             InitComm
  511 32C7:48           		PHA
  512 32C8:AD 80 15     		LDA $1580
  513 32CB:29 40        		AND #$40
  514 32CD:D0 F9        		BNE $32C8
  515 32CF:A9 80        		LDA #$80
  516 32D1:8D 82 15     		STA $1582
  517 32D4:8D 83 15     		STA $1583
  518                   ; $32D7
  519 32D7:AD 80 15     		LDA $1580
  520 32DA:29 40        		AND #$40
  521 32DC:F0 F9        		BEQ $32D7
  522 32DE:9C 83 15     		STZ $1583
  523 32E1:68           		PLA
  524 32E2:60           		RTS
  525                   
  526                   ; $32E3
  527 32E3:             ReadMemory
  528 32E3:AD 00 02     		LDA $0200
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page   10
                                                        02:00:54  

  529 32E6:D0 0E        		BNE $32F6
  530 32E8:A5 03        		LDA $03
  531 32EA:C9 FC        		CMP #$FC		; Memory range below $FC00
  532 32EC:D0 08        		BNE $32F6
  533 32EE:A5 02        		LDA $02			; 
  534 32F0:10 06        		BPL $32F8
  535 32F2:C9 84        		CMP #$84		; Do nothing for $FC84 and below (Unalloca
  536 32F4:90 02        		BCC $32F8
  537                   ; $32F6
  538 32F6:B2 02        		LDA ($02)
  539 32F8:60           		RTS
  540                   
  541                   ; $32F9
  542 32F9:20 C4 31     		JSR ReadAddress
  543 32FC:8E D0 15     		STX $15D0
  544 32FF:8D D1 15     		STA $15D1
  545 3302:20 95 32     		JSR ReadByte
  546 3305:8D D2 15     		STA $15D2
  547 3308:20 95 32     		JSR ReadByte
  548 330B:49 FF        		EOR #$FF
  549 330D:8D 21 02     		STA $0221
  550 3310:20 95 32     		JSR ReadByte
  551 3313:49 FF        		EOR #$FF
  552 3315:8D 22 02     		STA $0222
  553 3318:20 95 32     		JSR ReadByte
  554 331B:49 FF        		EOR #$FF
  555 331D:8D 23 02     		STA $0223
  556 3320:20 95 32     		JSR ReadByte
  557 3323:AA           		TAX
  558 3324:30 0F        		BMI $3335
  559 3326:29 07        		AND #$07
  560 3328:8D 24 02     		STA $0224
  561 332B:A9 00        		LDA #$00
  562 332D:85 04        		STA $04
  563 332F:A9 10        		LDA #$10
  564 3331:85 05        		STA $05
  565 3333:80 0D        		BRA $3342
  566 3335:29 07        		AND #$07
  567 3337:8D 25 02     		STA $0225
  568 333A:A9 01        		LDA #$01
  569 333C:85 04        		STA $04
  570 333E:A9 10        		LDA #$10
  571 3340:85 05        		STA $05
  572 3342:AD 24 02     		LDA $0224
  573 3345:29 07        		AND #$07
  574 3347:8D 27 02     		STA $0227
  575 334A:AD 25 02     		LDA $0225
  576 334D:29 07        		AND #$07
  577                   ; $334F
  578 334F:0A           		ASL
  579 3350:0A           		ASL
  580 3351:0A           		ASL
  581 3352:0D 27 02     		ORA $0227
  582 3355:8D D3 15     		STA $15D3
  583 3358:8D 26 02     		STA $0226
  584 335B:60           		RTS
  585                   
  586                   ; $335C
  587 335C:9C D3 15     		STZ $15D3
Epyx HandyAsm 1.12      howard.src                      10-Aug-12502:00:54 Page   11
                                                        02:00:54  

  588                   ; $335F
  589 335F:EE 21 02     		INC $0221
  590 3362:D0 11        		BNE $3375
  591 3364:EE 22 02     		INC $0222
  592 3367:D0 0C        		BNE $3375
  593 3369:EE 23 02     		INC $0223
  594 336C:D0 07        		BNE $3375
  595 336E:AD 26 02     		LDA $0226
  596 3371:8D D3 15     		STA $15D3
  597 3374:60           		RTS
  598                   
  599                   ; $3375
  600 3375:20 95 32     		JSR ReadByte
  601 3378:92 04        		STA ($04)
  602 337A:80 E3        		BRA $335F
  603 337C:20 A9 32     		JSR BeginUpload
  604 337F:AD 20 02     		LDA HowardEnabled
  605 3382:D0 03        		BNE $3387
  606 3384:9C D3 15     		STZ $15D3
  607 3387:EE 21 02     		INC $0221
  608 338A:D0 14        		BNE $33A0
  609 338C:EE 22 02     		INC $0222
  610 338F:D0 0F        		BNE $33A0
  611 3391:EE 23 02     		INC $0223
  612 3394:D0 0A        		BNE $33A0
  613 3396:AD 26 02     		LDA $0226
  614 3399:8D D3 15     		STA $15D3
  615 339C:20 B9 32     		JSR EndUpload
  616 339F:60           		RTS
  617                   
  618 33A0:B2 04        		LDA ($04)
  619 33A2:20 9E 32     		JSR WriteByte
  620 33A5:80 E0        		BRA $3387
  621                   
Epyx HandyAsm 1.12      Symbols                         10-Aug-12502:00:54 Page   12
                                                        02:00:54  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 A_OFFSET                          $0000 BACKGROUND_SPRITE
$0001 BACKNONCOLL_SPRITE                $0000 BACK_SHADOW_SPRITE
$0200 BASE_ORG                          MACRO BEGIN_ALLOCATE_ZEROPAGE
MACRO BEGIN_ZPAGE                       $00C0 BITS_MASK
$FDB0 BLUERED0                          $FDB1 BLUERED1
$FDB2 BLUERED2                          $FDB3 BLUERED3
$FDB4 BLUERED4                          $FDB5 BLUERED5
$FDB6 BLUERED6                          $FDB7 BLUERED7
$FDB8 BLUERED8                          $FDB9 BLUERED9
$FDBA BLUEREDA                          $FDBB BLUEREDB
$FDBC BLUEREDC                          $FDBD BLUEREDD
$FDBE BLUEREDE                          $FDBF BLUEREDF
$0002 BORROW_IN                         $0001 BORROW_OUT
$0003 BOUNDARY_SPRITE                   $0015 BREAK_CONTROLS
$0002 BSHADOW_SPRITE                    $0013 BUS_MONITOR
$0002 B_BUTTON                          $32A9 BeginUpload
$0002 CART0_IO_INACTIVE                 $0004 CART1_IO_INACTIVE
$0002 CART_ADDR_DATA                    $0001 CART_ADDR_STROBE
$0002 CART_POWER_OFF                    $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $0003 CONTINUE_REQUEST
$FD91 CPUSLEEP                          $FFFE CPU_IRQ
$FFFA CPU_NMI                           $FFFC CPU_RESET
$0002 DATA                              $FD95 DISPADRH
$FD94 DISPADRL                          $FD92 DISPCTL
$1FE0 DISPLAY_BUFSIZE                   $0008 DISP_COLOR
$0002 DISP_FLIP                         $0004 DISP_FOURBIT
$0001 DMA_ENABLE                        $0001 DOWNLOAD_REQUEST
$0001 DRAW_LEFT                         $0002 DRAW_UP
$314F Done                              $3095 Download
$0008 ENABLE_COUNT                      $0080 ENABLE_INT
$0020 ENABLE_INTEGRATE                  $0010 ENABLE_RELOAD
MACRO END_ALLOCATE_ZEROPAGE             $0000 END_OF_FILE
MACRO END_ZPAGE                         $0004 EVER_ON
$0001 EXTERNAL_POWER                    $32B9 EndUpload
$0080 FEEDBACK_7                        $0011 FILL_MEM
$0004 FLIP_BUTTON                       $00C0 FOUR_PER_PIXEL
$0004 FRAMERR                           $0005 GO_REQUEST
$FDA0 GREEN0                            $FDA1 GREEN1
$FDA2 GREEN2                            $FDA3 GREEN3
$FDA4 GREEN4                            $FDA5 GREEN5
Epyx HandyAsm 1.12      Symbols                         10-Aug-12502:00:54 Page   13
                                                        02:00:54  

$FDA6 GREEN6                            $FDA7 GREEN7
$FDA8 GREEN8                            $FDA9 GREEN9
$FDAA GREENA                            $FDAB GREENB
$FDAC GREENC                            $FDAD GREEND
$FDAE GREENE                            $FDAF GREENF
$FC00 HARDWARE_START                    $FD00 HCOUNT
$0020 HFLIP                             $0001 HI
$0007 HIDE_HOWARD_REQUEST               $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$0016 HOWARD_ABUS                       $0017 HOWARD_BBUS
$0018 HOWARD_CBUS                       $0019 HOWARD_DBUS
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         $FC29 HSIZOFFH
$FC28 HSIZOFFL                          $0220 HowardEnabled
$0002 INNER_BUTTON                      $FD80 INTRST
$FD81 INTSET                            $FD8B IODAT
$FD8A IODIR                             $FCC3 IOData
$FCC2 IOStatus                          $32C7 InitComm
$FBF0 IntTable                          $FCB0 JOYSTICK
$0080 JOY_DOWN                          $0010 JOY_LEFT
$0020 JOY_RIGHT                         $0040 JOY_UP
$0012 LARGE_DATA                        $0004 LAST_CLOCK
$FCC0 LEDS                              $0010 LEFT0_SELECT
$0020 LEFT1_SELECT                      $0040 LEFT2_SELECT
$0080 LEFT3_SELECT                      $0008 LEFTHAND
$0008 LEFTHANDED                        $00F0 LEFT_ATTENMASK
$0080 LITERAL                           $0000 LO
$FFF9 MAPCTL                            $FC55 MATHA
$FC54 MATHB                             $FC53 MATHC
$0020 MATHCARRY                         $FC52 MATHD
$FC63 MATHE                             $FC62 MATHF
$FC61 MATHG                             $FC60 MATHH
$FC6F MATHJ                             $FC6E MATHK
$FC6D MATHL                             $FC6C MATHM
$FC57 MATHN                             $FC56 MATHP
$0040 MATHWARNING                       $0080 MATHWORKING
$FD88 MIKEYHREV                         $FD89 MIKEYSREV
$FD00 MIKEY_BASE                        $0002 MIKEY_SPACE
$0010 MONITOR_BYTECOUNT                 $0001 MONITOR_I
$F900 MONITOR_RAM_RESERVED              $00F8 MONITOR_ZP_RESERVED
$FD44 MPAN                              $FD50 MSTEREO
$FD9C MTEST0                            $FD9D MTEST1
$FD9E MTEST2                            $3029 Main
$0006 NEXTZPG                           $3000 NMI_ORG
$0004 NOEXP                             $0005 NONCOLL_SPRITE
$0000 NOP_REQUEST                       $0004 NORMAL_SPRITE
$0020 NO_COLLIDE                        $3000 NmiHandler
$0000 ONE_PER_PIXEL                     $0008 OPTION1_BUTTON
$0004 OPTION2_BUTTON                    $0001 ORIGIN
$0001 OUTER_BUTTON                      $0008 OVERRUN
$0001 PARBIT                            $0010 PAREN
$0010 PARERR                            $0001 PAREVEN
$0001 PAUSE_SWITCH                      $FD93 PBKUP
$0004 PC_OFFSET                         $0002 POWERON
$FC2F PROCADRH                          $FC2E PROCADRL
$0006 P_OFFSET                          $FCB2 RCART_0
$FCB3 RCART_1                           $0010 READ_ENABLE
$0010 REGISTER                          $0007 REGISTER_BYTECOUNT
$0010 RELOAD_HV                         $0020 RELOAD_HVS
Epyx HandyAsm 1.12      Symbols                         10-Aug-12502:00:54 Page   14
                                                        02:00:54  

$0030 RELOAD_HVST                       $0030 RELOAD_MASK
$0000 RELOAD_NONE                       $0008 RESETERR
$0040 RESET_DONE                        $0008 RESTART_BUTTON
$0008 RESTLESS                          $0008 REUSE_PALETTE
$0001 RIGHT0_SELECT                     $0002 RIGHT1_SELECT
$0004 RIGHT2_SELECT                     $0008 RIGHT3_SELECT
$000F RIGHT_ATTENMASK                   $001A ROM
$019A ROM_HEADER_SIZE                   $0004 ROM_SPACE
$0003 RUN_ADDRESS                       $0002 RXBRK
$0040 RXINTEN                           $0040 RXRDY
$31C4 ReadAddress                       $3295 ReadByte
$32E3 ReadMemory                        $31CB ReadRange
$31EB ReceiveRange                      $0201 RunAddr
$FC2D SCBADRH                           $FC2C SCBADRL
$FC11 SCBNEXTH                          $FC10 SCBNEXTL
$FC23 SCVPOSH                           $FC22 SCVPOSL
$FD90 SDONEACK                          $0006 SEE_HOWARD_REQUEST
$FD8C SERCTL                            $FD8D SERDAT
$FD10 SERIALRATE                        $0010 SERIAL_INT
$0007 SHADOW_SPRITE                     $0080 SIGNMATH
$0004 SKIP_SPRITE                       $0004 SLAVE_REQUEST
$FC82 SPRCOLL                           $FC80 SPRCTL0
$FC81 SPRCTL1                           $FC13 SPRDLINEH
$FC12 SPRDLINEL                         $FC21 SPRDOFFH
$FC20 SPRDOFFL                          $FC91 SPRGO
$FC19 SPRHSIZH                          $FC18 SPRHSIZL
$FC83 SPRINIT                           $0002 SPRITESTOP
$0002 SPRITETOSTOP                      $0001 SPRITEWORKING
$0001 SPRITE_GO                         $FC92 SPRSYS
$FC1B SPRVSIZH                          $FC1A SPRVSIZL
$FC1D STRETCHH                          $FC1C STRETCHL
$FC90 SUZYBUSEN                         $FC88 SUZYHREV
$FC89 SUZYSREV                          $FC00 SUZY_BASE
$0001 SUZY_SPACE                        $FCB1 SWITCHES
$FD87 SYSCTL1                           $0003 S_OFFSET
$0203 SaveA                             $020A SaveBusMonitor
$0207 SavePCHi                          $0208 SavePCLo
$0209 SavePS                            $0206 SaveSP
$0204 SaveX                             $0205 SaveY
$FFFE TEMPORG                           $0080 THREE_PER_PIXEL
$FC03 TILTACUMH                         $FC02 TILTACUML
$FC1F TILTH                             $FC1E TILTL
$FD00 TIMER0                            $0001 TIMER0_INT
$FD04 TIMER1                            $0002 TIMER1_INT
$FD08 TIMER2                            $0004 TIMER2_INT
$FD0C TIMER3                            $0008 TIMER3_INT
$FD10 TIMER4                            $FD14 TIMER5
$0020 TIMER5_INT                        $FD18 TIMER6
$0040 TIMER6_INT                        $FD1C TIMER7
$0080 TIMER7_INT                        $0008 TIMER_DONE
$0000 TIM_BACKUP                        $0001 TIM_CONTROLA
$0003 TIM_CONTROLB                      $0002 TIM_COUNT
$FC01 TMPADRH                           $FC00 TMPADRL
$0014 TRACE                             $0080 TURBO_DISABLE
$0040 TWO_PER_PIXEL                     $0002 TXBRK
$0020 TXEMPTY                           $0080 TXINTEN
$0004 TXOPEN                            $0080 TXRDY
$0004 UNSAFEACCESS                      $0004 UNSAFEACCESSRST
$0002 UPLOAD_REQUEST                    $0002 UP_CURRENT_PAGE
Epyx HandyAsm 1.12      Symbols                         10-Aug-12502:00:54 Page   15
                                                        02:00:54  

$0005 UP_HAHDATA                        $0004 UP_MEMWATCH
$0003 UP_REGISTERS                      $0001 UP_THIS_PAGE
$0200 Unknown                           $3150 Upload
$31C3 UploadDone                        $FD08 VCOUNT
$0008 VECTOR_SPACE                      $0004 VERTICAL_INT
$0010 VFLIP                             $FC0D VIDADRH
$FC0C VIDADRL                           $FC09 VIDBASH
$FC08 VIDBASL                           $FC07 VOFFH
$FC06 VOFFL                             $FC17 VPOSSTRTH
$FC16 VPOSSTRTL                         $FC27 VSIZACUMH
$FC26 VSIZACUML                         $FC2B VSIZOFFH
$FC2A VSIZOFFL                          $0010 VSTRETCH
$0010 VSTRETCHING                       $329E WriteByte
$3239 WriteRange                        $0006 XOR_SHADOW_SPRITE
$0006 XOR_SPRITE                        $0001 X_OFFSET
$0002 Y_OFFSET                          $0000 dest
$0002 dest_old                          $0004 dest_old2
