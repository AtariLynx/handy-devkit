Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    1
                                                        11:46:53  

    1                   * ====================================================
    2                   
    3                   	.LIST OFF
   10                   	.LIST ON
   11                   
   12      0000         LO				.EQ 0
   13      0001         HI				.EQ 1
   14                   
   15 FFFE:             				.ORG $1000
   16 1000:             RCARTEN			.DS	2	; $1000		Primary and secondary memory 
   17                   
   18 1002:             				.ORG $1580
   19 1580:             PORT_STATUS		.DS	1	; $1580
   20      0040         BUSY			.EQ %01000000
   21      0080         DATA_AVAILABLE	.EQ %10000000
   22 1581:             PORT_DATA		.DS 1	; $1581
   23 1582:             PORT_DIRECTION	.DS 1	; $1582
   24      0080         DIRECTION_INPUT			.EQ %10000000
   25      0000         DIRECTION_OUTPUT		.EQ %00000000
   26 1583:             PORT_POUT		.DS 1	; $1583
   27      0080         POUT			.EQ %10000000	; Low indicates the LYNX is in in
   28                   
   29 1584:             				.ORG $15D0
   30 15D0:             LDRADD			.DS 3		; $15D0-$15D2 ; 20 bits of cartridge a
   31 15D3:             ROMPAGE			.DS 1		; $15D3 Primary and secondary paging
   32      0000         PAGESIZE_4096	.EQ	%00000000
   33      0001         PAGESIZE_2048	.EQ	%00000001
   34      0002         PAGESIZE_1024	.EQ	%00000010
   35      0003         PAGESIZE_512	.EQ	%00000011
   36      0004         PAGESIZE_256	.EQ	%00000100
   37      0007         ROM_PAGING_MASK			.EQ	%00000111
   38      0007         PRIMARY_PAGING_MASK		.EQ	%00000111
   39      0038         SECONDARY_PAGING_MASK	.EQ	%00111000
   40                   
   41 15D4:             				.ORG $15E0
   42 15E0:             SEGWR			.DS 1 		; $15E0
   43      0001         SEG				.EQ	%00000001	; 1 -> Remap 4000-7FFF in Handy R
   44                   								; 0 -> No remapping of Handy RAM 
   45                   
   46                   * ====================================================
   47                   
   48                   		.IN 6502:src/syszpage.src
    1                   
    2                   * === syszpage.src ===================================
    3                   *
    4                   * System Zero-Page Data Allocations  --  the 6502 Side
    5                   *
    6                   * Copyright (C) 1988, Epyx, Inc.
    7                   * All Rights Reserved
    8                   * CONFIDENTIAL and PROPRIETARY
    9                   *
   10                   * Date		Name		Description
   11                   * ---------	--------------	---------------------------
   12                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   13                   * 19 Apr 89	-RJ		Added description of rule for using s
   14                   * 22 Mar 89	-RJ		Removed the audio variables from this
   15                   * 20 Mar 89	RG Goudy	Added several new zpage pointers
   16                   * 26 Jan 89	-RJ		Got rid of Interruptus
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    2
                        6502:src/syszpage.src           11:46:53  

   17                   * 26-Dec-88	=RJ Mical=	Created this file from sysdata.
   18                   *
   19                   * ====================================================
   20                   
   21                   
   22                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   23                   *
   24                   * This file should be included before any source code 
   25                   *
   26                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   27                   
   28                   
   29                   
   30                   * System programmers note:  the sysptrs are defined as
   31                   * pointers.  These can't be used during interrupt code
   32                   * no promises regarding the usage of these for anythin
   33                   * while using one of these is a dangerous thing to do
   34                   		BEGIN_ZPAGE
    1      15E1       + TEMPORG	  .= *
    2 15E1:           + 	  .ORG NEXTZPG
    3                 + 
   35 0000:             sysptr		.DS 2
   36 0002:             sysptr2		.DS 2
   37 0004:             sysptr3		.DS 2
   38                   		END_ZPAGE
    1      0006       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0006:           + 	  .ORG TEMPORG
    6                 + 
   39                   
   40                   
   41                   
   49                   
   50      0200         BASE_ORG		.EQ $0200
   51      3000         NMI_ORG			.EQ $3000
   52                   
   53 15E1:             		.ORG BASE_ORG
   54                   
   55 0200:             DirectMemory	.DS 1	; Non-zero bypasses memory protecti
   56 0201:             RunAddr			.DS 2		; $0201-$0202
   57 0203:             Registers		.DS REGISTER_BYTECOUNT	; $0203-$0209
   58 020A:             BusMonitor		.DS MONITOR_BYTECOUNT	; $020A-$0219	Monito
   59 021A:             		.ORG BASE_ORG+$1E
   60 021E:             VERSION			.DS 1		; $021E
   61 021F:             		.ORG BASE_ORG+$20
   62 0220:             HowardEnabled	.DS 1		; $0220:		Howard board enabled (0
   63 0221:             CartRegister	.DS	3		; $0221-$0223:	24-bit counter (inv
   64 0224:             PrimaryRomSize	.DS 1		; $0224
   65 0225:             SecondaryRomSize	.DS 1	; $0225
   66 0226:             ROMPAGE_RAM		.DS 1 		; $0226: 		Shadow register to ROM
   67 0227:             RomSizeTemp		.DS 1		; $0227
   68                   
   69                   * ====================================================
   70                   
   71 0228:             		.ORG NMI_ORG
   72                   		.RUN *
   73                   
   74 3000:             NmiHandler	; $3000
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    3
                                                        11:46:53  

   75 3000:D8           		CLD
   76 3001:8D 03 02     		STA Registers+A_OFFSET 			; Store accumulator, X and
   77 3004:8E 04 02     		STX Registers+X_OFFSET
   78 3007:8C 05 02     		STY Registers+Y_OFFSET
   79 300A:68           		PLA 				; Get status, low and high return address fr
   80 300B:FA           		PLX
   81 300C:7A           		PLY
   82 300D:8D 09 02     		STA Registers+P_OFFSET			; Store for inspection
   83 3010:8E 07 02     		STX Registers+PC_OFFSET+LO
   84 3013:8C 08 02     		STY Registers+PC_OFFSET+HI
   85 3016:BA           		TSX					; Store stack pointer 
   86 3017:8E 06 02     		STX Registers+S_OFFSET
   87                   
   88                   ; Silence all audio channels	$301A
   89 301A:9C 20 FD     		STZ AUDIO0+AUD_VOLCNTRL
   90 301D:9C 28 FD     		STZ AUDIO1+AUD_VOLCNTRL
   91 3020:9C 30 FD     		STZ AUDIO2+AUD_VOLCNTRL
   92 3023:9C 38 FD     		STZ AUDIO3+AUD_VOLCNTRL
   93                   
   94                   ; $3026
   95 3026:20 ** **     		JSR InitComm		; $32C7
   96                   
   97 3029:             Main	; $3029
   98 3029:20 ** **     		JSR ReceiveByte		; Read byte from parallel port
   99                   
  100 302C:C9 01        		CMP #DOWNLOAD_REQUEST ; Control command: 01 means "D
  101 302E:D0 **        		BNE .2	
  102 3030:20 ** **     		JSR Download		; Control loop for downloading files f
  103 3033:80 F4        		BRA Main			; Next command
  104                   
  105                   ; $3035
  106 3035:C9 02        .2		CMP #UPLOAD_REQUEST	; Control command: 02 means "U
  107 3037:D0 **        		BNE .5
  108 3039:20 ** **     		JSR Upload			; Control loop for uploading data from 
  109 303C:80 EB        		BRA Main			; Next command
  110                   
  111 303E:C9 05        .5		CMP #GO_REQUEST		; Control command: 05 means "Go"
  112 3040:D0 **        		BNE .3				; Check whether to return from NMI
  113 3042:A9 04        		LDA #TXOPEN			; Turn off serial IRQs before starting
  114 3044:8D 8C FD     		STA SERCTL			; and make sure serial port is open-col
  115 3047:80 **        		BRA .9
  116                   
  117                   ; $3049
  118 3049:C9 03        .3		CMP #CONTINUE_REQUEST
  119 304B:D0 **        		BNE .4
  120                   
  121                   ; Restore all previous values and return from NMI hand
  122 304D:AE 06 02     .9		LDX Registers+S_OFFSET		; Restore stack pointer
  123 3050:9A           		TXS
  124 3051:AD 07 02     		LDA Registers+S_OFFSET+HI	; $0208
  125 3054:48           		PHA
  126 3055:AD 06 02     		LDA Registers+S_OFFSET+LO	; $0207
  127 3058:48           		PHA
  128 3059:AD 09 02     		LDA Registers+P_OFFSET		; $0209
  129 305C:48           		PHA
  130 305D:AD 03 02     		LDA Registers+A_OFFSET		; Load stored values for A, 
  131 3060:AE 04 02     		LDX Registers+X_OFFSET
  132 3063:AC 05 02     		LDY Registers+Y_OFFSET
  133 3066:40           		RTI
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    4
                                                        11:46:53  

  134                   
  135                   ; $3067
  136 3067:C9 04        .4		CMP #SLAVE_REQUEST
  137 3069:D0 **        		BNE .6
  138 306B:20 ** **     		JSR BeginUpload
  139 306E:A9 00        		LDA #$00
  140 3070:20 ** **     		JSR SendByte		; Zero (A) to page 1
  141 3073:20 ** **     		JSR EndUpload
  142 3076:4C 29 30     		JMP Main			; Next control command
  143                   
  144                   ; $3079
  145 3079:C9 06        .6		CMP #SEE_HOWARD_REQUEST
  146 307B:D0 **        		BNE .7
  147 307D:A9 01        		LDA #$01
  148 307F:8D 20 02     		STA HowardEnabled
  149 3082:9C E0 15     		STZ SEGWR			; No remapping of Handy RAM
  150 3085:4C 29 30     		JMP Main
  151                   
  152                   ; #3088
  153 3088:C9 07        .7		CMP #HIDE_HOWARD_REQUEST
  154 308A:D0 **        		BNE .8
  155 308C:9C 20 02     		STZ HowardEnabled
  156 308F:4C 29 30     		JMP Main
  157                   
  158                   ; $3092
  159 3092:4C 29 30     .8		JMP Main			; Next control command
  160                   
  161                   ; Control loop for downloading from Handebug to Howard
  162 3095:             Download
  163                   ; $3095
  164 3095:20 ** **     		JSR ReceiveByte
  165                   
  166                   ; $3098
  167 3098:C9 00        		CMP #END_OF_FILE	 ; End of .bin file
  168 309A:D0 **        		BNE .11
  169 309C:4C ** **     		JMP Done
  170                   
  171                   ; $309F
  172 309F:C9 01        .11		CMP #ORIGIN			; Receive load address (1)
  173 30A1:D0 **        		BNE .12
  174 30A3:20 ** **     		JSR ReceiveWord 	; Read address from parallel port t
  175 30A6:86 00        		STX sysptr+LO
  176 30A8:85 01        		STA sysptr+HI
  177 30AA:80 E9        		BRA Download
  178                   
  179                   ; $30AC
  180 30AC:C9 02        .12		CMP #DATA			; Load data of max 1-255 bytes (2)
  181 30AE:D0 **        		BNE .13
  182 30B0:20 ** **     		JSR ReceiveByte		; Read byte from parallel port 
  183 30B3:20 ** **     		JSR ReceiveByte		; and another one, discarding first
  184 30B6:A8           		TAY
  185 30B7:20 ** **     		JSR ReadRange		; Read Y number of bytes and store in
  186 30BA:80 D9        		BRA Download
  187                   
  188 30BC:C9 03        .13		CMP #RUN_ADDRESS	; Receive run address (3)
  189 30BE:D0 **        		BNE .14
  190 30C0:20 ** **     		JSR ReceiveWord 	; Read two bytes to X and A
  191 30C3:8E 01 02     		STX RunAddr			; Store in a special place
  192 30C6:8D 02 02     		STA RunAddr+1
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    5
                                                        11:46:53  

  193 30C9:80 CA        		BRA Download
  194                   
  195                   ; 30CB
  196 30CB:C9 10        .14		CMP #REGISTER		; Read registers from Amiga/PC
  197 30CD:D0 **        		BNE .15
  198 30CF:A9 03        		LDA #<Registers
  199 30D1:85 00        		STA sysptr+LO
  200 30D3:A9 02        		LDA #>Registers
  201 30D5:85 01        		STA sysptr+HI
  202 30D7:A0 07        		LDY #REGISTER_BYTECOUNT	; Send 7 bytes from $0203 an
  203 30D9:20 ** **     		JSR ReceiveHoward
  204 30DC:80 B7        		BRA Download
  205                   
  206                   ; $30DE
  207 30DE:C9 11        .15		CMP #FILL_MEM		; Fill Range with value: 11 Value 
  208 30E0:D0 **        		BNE .16
  209 30E2:20 ** **     		JSR ReceiveByte		; Read fill value
  210 30E5:48           		PHA
  211 30E6:20 ** **     		JSR ReceiveWord		; Read destination address
  212 30E9:86 00        		STX sysptr+LO
  213 30EB:85 01        		STA sysptr+HI
  214 30ED:20 ** **     		JSR ReceiveByte		; Read count
  215 30F0:A8           		TAY
  216 30F1:AD 20 02     		LDA HowardEnabled	; Is Howard board enabled?
  217 30F4:D0 **        		BNE .28
  218 30F6:20 ** **     		JSR MapMemory		; Remap memory address
  219 30F9:68           		PLA
  220 30FA:92 02        .20		STA (sysptr2+LO)	; Store at remapped address
  221 30FC:E6 02        		INC sysptr2+LO
  222 30FE:D0 **        		BNE .21
  223 3100:64 00        		STZ sysptr+LO
  224 3102:E6 01        		INC sysptr+HI
  225 3104:48           		PHA					; Crossing page boundary, so remap
  226 3105:20 ** **     		JSR MapMemory
  227 3108:68           		PLA					; Restore fill value 
  228 3109:88           .21		DEY
  229 310A:D0 EE        		BNE .20
  230 310C:4C 95 30     		JMP Download
  231                   
  232                   ; $310F	Read when Howard board is enabled?
  233 310F:             .28
  234 310F:68           		PLA					; Restore fill value
  235 3110:             .23
  236 3110:92 00        		STA (sysptr+LO)		; Addresses when Howard is visible 
  237 3112:E6 00        		INC sysptr+LO
  238 3114:D0 **        		BNE .22
  239 3116:E6 01        		INC sysptr+HI
  240                   
  241 3118:88           .22		DEY
  242 3119:D0 F5        		BNE .23
  243 311B:4C 95 30     		JMP Download
  244                   
  245                   ; $311E
  246 311E:             .16
  247 311E:C9 13        		CMP #BUS_MONITOR
  248 3120:D0 **        		BNE .17
  249 3122:A9 0A        		LDA #<BusMonitor
  250 3124:85 00        		STA sysptr+LO
  251 3126:A9 02        		LDA #>BusMonitor
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    6
                                                        11:46:53  

  252 3128:85 01        		STA sysptr+HI
  253 312A:A0 10        		LDY #MONITOR_BYTECOUNT
  254 312C:20 ** **     		JSR ReceiveHoward
  255 312F:4C 95 30     		JMP Download
  256                   
  257                   ; $3132
  258 3132:C9 12        .17		CMP #LARGE_DATA
  259 3134:D0 **        		BNE .18
  260 3136:20 ** **     		JSR ReceiveWord		; Read length
  261 3139:20 FA 31     		JSR $31FA			; Handle large data routine
  262 313C:4C 95 30     		JMP Download
  263                   
  264                   ; 313F
  265 313F:C9 1A        .18		CMP #ROM
  266 3141:D0 **        		BNE .19
  267 3143:20 F9 32     		JSR $32F9
  268 3146:20 ** **     		JSR DownloadROM
  269 3149:4C 95 30     		JMP Download
  270                   ; $314C
  271 314C:             .19
  272 314C:4C 95 30     		JMP Download
  273                   ; $314F
  274 314F:             Done
  275 314F:60           		RTS
  276                   
  277                   ; $3150
  278 3150:             Upload
  279 3150:20 ** **     		JSR ReceiveByte
  280 3153:C9 00        		CMP #END_OF_FILE
  281 3155:D0 **        		BNE .31
  282 3157:4C ** **     		JMP UploadDone
  283                   
  284                   ; $315A
  285 315A:C9 01        .31		CMP #ORIGIN
  286 315C:D0 **        		BNE .32
  287 315E:20 ** **     		JSR ReceiveWord
  288 3161:86 00        		STX sysptr+LO
  289 3163:85 01        		STA sysptr+HI
  290 3165:80 E9        		BRA Upload
  291                   
  292                   ; $3167
  293 3167:C9 02        .32		CMP #DATA
  294 3169:D0 **        		BNE .33
  295 316B:20 ** **     		JSR ReceiveByte
  296 316E:A8           		TAY
  297 316F:A5 00        		LDA sysptr+LO
  298 3171:85 04        		STA sysptr3+LO
  299 3173:A5 01        		LDA sysptr+HI
  300 3175:85 05        		STA sysptr3+HI
  301 3177:20 ** **     		JSR BeginUpload
  302 317A:A9 02        		LDA #DATA
  303 317C:20 ** **     		JSR SendByte
  304 317F:AD 1E 02     		LDA VERSION			; Similar to $FBB9 in monitor.src
  305 3182:20 ** **     		JSR SendByte
  306 3185:98           		TYA
  307 3186:20 ** **     		JSR SendByte		; Length
  308 3189:20 ** **     		JSR SendRange
  309 318C:20 ** **     		JSR EndUpload
  310 318F:80 BF        		BRA Upload
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    7
                                                        11:46:53  

  311                   
  312                   ; $3191
  313 3191:C9 10        .33		CMP #REGISTER
  314 3193:D0 **        		BNE .34
  315 3195:A9 03        		LDA #<Registers
  316 3197:85 00        		STA sysptr+LO
  317 3199:A9 02        		LDA #>Registers
  318 319B:85 01        		STA sysptr+HI
  319 319D:A0 07        		LDY #REGISTER_BYTECOUNT
  320 319F:20 ** **     		JSR BeginUpload
  321 31A2:A9 10        		LDA #REGISTER
  322 31A4:20 ** **     		JSR SendByte
  323 31A7:20 ** **     		JSR SendRangeCore
  324 31AA:20 ** **     		JSR EndUpload
  325 31AD:80 A1        		BRA Upload
  326                   
  327                   ; $31AF
  328 31AF:C9 14        .34		CMP #TRACE
  329 31B1:D0 **        		BNE .35
  330 31B3:80 9B        		BRA Upload
  331                   
  332                   ; $31B5
  333 31B5:C9 1A        .35		CMP #ROM
  334 31B7:D0 **        		BNE .36
  335 31B9:20 F9 32     		JSR $32F9
  336 31BC:20 ** **     		JSR UploadROM
  337 31BF:80 8F        		BRA Upload
  338                   
  339                   ; $31C1
  340 31C1:             .36							; Unrecognized upload type
  341 31C1:80 8D        		BRA Upload
  342                   
  343                   ; $31C3
  344 31C3:             UploadDone
  345 31C3:60           		RTS
  346                   
  347                   ; $31C4
  348 31C4:             ReceiveWord
  349 31C4:20 ** **     		JSR ReceiveByte
  350 31C7:AA           		TAX
  351 31C8:4C ** **     		JMP ReceiveByte
  352                   
  353                   ; $31CB
  354 31CB:             ReadRange
  355 31CB:AD 20 02     		LDA HowardEnabled
  356 31CE:D0 **        		BNE ReceiveHoward
  357 31D0:20 ** **     		JSR MapMemory
  358 31D3:20 ** **     .38		JSR ReceiveByte
  359 31D6:92 02        		STA (sysptr2+LO)
  360 31D8:E6 02        		INC sysptr2+LO
  361 31DA:D0 **        		BNE .37
  362 31DC:64 00        		STZ sysptr+LO
  363 31DE:E6 01        		INC sysptr+HI		; Page boundary crossed, so remap mem
  364 31E0:20 ** **     		JSR MapMemory
  365 31E3:88           .37		DEY
  366 31E4:D0 ED        		BNE .38
  367 31E6:A5 02        		LDA sysptr2+LO
  368 31E8:85 00        		STA sysptr+LO
  369 31EA:60           		RTS
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    8
                                                        11:46:53  

  370                   
  371                   ; $31EB
  372 31EB:             ReceiveHoward	; Register Y is number of bytes to read
  373 31EB:20 ** **     .39		JSR ReceiveByte
  374 31EE:92 00        		STA (sysptr+LO)
  375 31F0:E6 00        		INC sysptr+LO
  376 31F2:D0 **        		BNE .3A
  377 31F4:E6 01        		INC sysptr+HI
  378 31F6:88           .3A		DEY
  379 31F7:D0 F2        		BNE ReceiveHoward
  380 31F9:60           		RTS
  381                   
  382                   ; $31FA
  383                   ; Large data handling routine
  384 31FA:AC 20 02     		LDY HowardEnabled
  385 31FD:D0 **        		BNE .43
  386 31FF:A8           		TAY
  387 3200:8A           		TXA
  388 3201:F0 **        		BEQ .40
  389 3203:C8           		INY
  390 3204:20 ** **     .40		JSR MapMemory
  391 3207:20 ** **     .41		JSR ReceiveByte
  392 320A:92 02        		STA (sysptr2+LO)
  393 320C:E6 02        		INC sysptr2+LO
  394 320E:D0 **        		BNE .42
  395 3210:64 00        		STZ sysptr+LO
  396 3212:E6 01        		INC sysptr+HI
  397 3214:20 ** **     		JSR MapMemory
  398 3217:CA           .42		DEX
  399 3218:D0 ED        		BNE .41
  400 321A:88           		DEY
  401 321B:D0 EA        		BNE .41
  402 321D:A5 02        		LDA sysptr2+LO
  403 321F:85 00        		STA sysptr+LO
  404 3221:60           		RTS
  405                   
  406                   ; $3222		Howard board is enabled
  407 3222:A8           .43		TAY
  408 3223:8A           		TXA
  409 3224:F0 **        		BEQ .44
  410 3226:C8           		INY
  411 3227:20 ** **     .44		JSR ReceiveByte
  412 322A:92 00        		STA (sysptr+LO)
  413 322C:E6 00        		INC sysptr+LO
  414 322E:D0 **        		BNE .45
  415 3230:E6 01        		INC sysptr+HI
  416 3232:CA           .45		DEX
  417 3233:D0 F2        		BNE .44
  418 3235:88           		DEY
  419 3236:D0 EF        		BNE .44
  420 3238:60           		RTS
  421                   
  422                   ; $3239
  423 3239:             SendRange
  424 3239:AD 20 02     		LDA HowardEnabled
  425 323C:D0 **        		BNE SendRangeCore
  426 323E:20 ** **     		JSR MapMemory
  427 3241:20 ** **     .50		JSR ReadMemory
  428 3244:20 ** **     		JSR SendByte
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page    9
                                                        11:46:53  

  429 3247:E6 02        		INC sysptr2+LO
  430 3249:D0 **        		BNE .51
  431 324B:64 00        		STZ sysptr+LO
  432 324D:E6 01        		INC sysptr+HI
  433 324F:20 ** **     		JSR MapMemory
  434                   ; $3252
  435 3252:88           .51		DEY
  436 3253:D0 EC        		BNE .50
  437 3255:A5 02        		LDA sysptr2+LO
  438 3257:85 00        		STA sysptr+LO
  439 3259:60           		RTS
  440                   
  441                   ; $325A
  442 325A:             SendRangeCore
  443 325A:A5 00        		LDA sysptr+LO
  444 325C:85 02        		STA sysptr2+LO
  445 325E:A5 01        		LDA sysptr+HI
  446 3260:85 03        		STA sysptr2+HI
  447 3262:20 ** **     .53		JSR ReadMemory
  448 3265:20 ** **     		JSR SendByte
  449 3268:E6 02        		INC sysptr2+LO
  450 326A:D0 **        		BNE .52
  451 326C:E6 03        		INC sysptr2+HI
  452 326E:E6 01        		INC sysptr+HI
  453                   ; $3270
  454 3270:88           .52		DEY
  455 3271:D0 EF        		BNE .53
  456 3273:A5 02        		LDA sysptr2+LO
  457 3275:85 00        		STA sysptr+LO
  458 3277:60           		RTS
  459                   
  460                   ; $3278
  461                   ; Memory mapping function from sysptr to sysptr2
  462 3278:             MapMemory
  463 3278:A5 00        		LDA sysptr+LO
  464 327A:85 02        		STA sysptr2+LO
  465 327C:A5 01        		LDA sysptr+HI
  466 327E:30 **        		BMI .55				; Normal memory for $8000 and higher
  467 3280:C9 40        		CMP #$40
  468 3282:B0 **        		BCS .54				; Skip when sysptr+HI is $40-$7F
  469 3284:5A           		PHY
  470 3285:A0 01        		LDY #SEG
  471 3287:8C E0 15     		STY SEGWR			; Remap $0000-$3FFF to $4000-$7FFF in Ha
  472 328A:7A           		PLY
  473 328B:09 40        		ORA #$40			; Adjust address to range
  474 328D:80 **        		BRA .55
  475 328F:             .54
  476 328F:9C E0 15     		STZ SEGWR			; No remapping of Handy RAM
  477 3292:85 03        .55		STA sysptr2+HI
  478 3294:60           		RTS
  479                   
  480                   ; $3295
  481 3295:             ReceiveByte
  482 3295:AD 80 15     		LDA PORT_STATUS
  483 3298:10 FB        		BPL ReceiveByte		; "When receiving data, DATA AVAILA
  484 329A:AD 81 15     		LDA PORT_DATA
  485 329D:60           		RTS
  486                   
  487                   ; $329E
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page   10
                                                        11:46:53  

  488 329E:             SendByte
  489 329E:48           		PHA
  490 329F:AD 80 15     .60		LDA PORT_STATUS
  491 32A2:10 FB        		BPL .60				; "When sending data, DATA AVAILABLE goes
  492 32A4:68           		PLA
  493 32A5:8D 81 15     		STA PORT_DATA
  494 32A8:60           		RTS
  495                   
  496                   ; $32A9
  497 32A9:             BeginUpload
  498 32A9:AD 80 15     		LDA PORT_STATUS
  499 32AC:29 40        		AND #BUSY
  500 32AE:F0 F9        		BEQ BeginUpload
  501 32B0:9C 82 15     		STZ PORT_DIRECTION	; Port direction to output
  502 32B3:A9 80        		LDA #POUT
  503 32B5:8D 83 15     		STA PORT_POUT		; Howard in output mode
  504 32B8:60           		RTS
  505                   
  506                   ; $32B9
  507 32B9:             EndUpload
  508 32B9:AD 80 15     		LDA PORT_STATUS
  509 32BC:10 FB        		BPL EndUpload
  510 32BE:A9 80        		LDA #DIRECTION_INPUT
  511 32C0:8D 82 15     		STA PORT_DIRECTION
  512 32C3:9C 83 15     		STZ PORT_POUT		; Howard in input mode 
  513 32C6:60           		RTS
  514                   
  515                   ; $32C7
  516 32C7:             InitComm
  517 32C7:48           		PHA
  518 32C8:AD 80 15     .61		LDA PORT_STATUS
  519 32CB:29 40        		AND #BUSY
  520 32CD:D0 F9        		BNE .61
  521 32CF:A9 80        		LDA #DIRECTION_INPUT
  522 32D1:8D 82 15     		STA PORT_DIRECTION
  523 32D4:8D 83 15     		STA PORT_POUT		; Howard in output mode
  524 32D7:AD 80 15     .62		LDA PORT_STATUS
  525 32DA:29 40        		AND #BUSY
  526 32DC:F0 F9        		BEQ .62
  527 32DE:9C 83 15     		STZ PORT_POUT		; Howard in input mode
  528 32E1:68           		PLA
  529 32E2:60           		RTS
  530                   
  531                   ; $32E3
  532 32E3:             ReadMemory
  533 32E3:AD 00 02     		LDA DirectMemory
  534 32E6:D0 **        		BNE .63
  535 32E8:A5 03        		LDA sysptr2+HI
  536 32EA:C9 FC        		CMP #>SUZY_BASE		; Memory range below Suzy ($FC00) i
  537 32EC:D0 **        		BNE .63
  538 32EE:A5 02        		LDA sysptr2+LO 
  539 32F0:10 **        		BPL .64
  540 32F2:C9 84        		CMP #$84			; Do nothing for $FC84 and below (Unalloc
  541 32F4:90 **        		BCC .64
  542 32F6:B2 02        .63 	LDA (sysptr2+LO)
  543 32F8:60           .64 	RTS
  544                   
  545                   ; $32F9		; Prepares ROM access
  546 32F9:20 C4 31     		JSR ReceiveWord
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page   11
                                                        11:46:53  

  547 32FC:8E D0 15     		STX LDRADD
  548 32FF:8D D1 15     		STA LDRADD+1
  549 3302:20 95 32     		JSR ReceiveByte
  550 3305:8D D2 15     		STA LDRADD+2		; 20-bit address for cartridge
  551 3308:20 95 32     		JSR ReceiveByte		; Length to read LSB first to MSB l
  552 330B:49 FF        		EOR #$FF			; EXOR'ed to count up
  553 330D:8D 21 02     		STA CartRegister		
  554 3310:20 95 32     		JSR ReceiveByte
  555 3313:49 FF        		EOR #$FF
  556 3315:8D 22 02     		STA CartRegister+1
  557 3318:20 95 32     		JSR ReceiveByte		; MSB of address
  558 331B:49 FF        		EOR #$FF
  559 331D:8D 23 02     		STA CartRegister+2
  560 3320:20 95 32     		JSR ReceiveByte		; Status byte (see handebug-downloa
  561 3323:AA           		TAX
  562 3324:30 **        		BMI .80				; LO for port 0 (primary) and HI for port
  563 3326:29 07        		AND #ROM_PAGING_MASK	; Page size is 3 bits (see ROMP
  564 3328:8D 24 02     		STA PrimaryRomSize		; ROM primary memory paging
  565 332B:A9 00        		LDA #<RCARTEN
  566 332D:85 04        		STA sysptr3+LO
  567 332F:A9 10        		LDA #>RCARTEN
  568 3331:85 05        		STA sysptr3+HI
  569 3333:80 **        		BRA .81
  570                   
  571                   ; $3335
  572 3335:29 07        .80		AND #ROM_PAGING_MASK
  573 3337:8D 25 02     		STA SecondaryRomSize	; ROM secondary memory paging
  574 333A:A9 01        		LDA #<RCARTEN+1
  575 333C:85 04        		STA sysptr3+LO
  576 333E:A9 10        		LDA #>RCARTEN
  577 3340:85 05        		STA sysptr3+HI
  578                   
  579                   ; $3342
  580 3342:AD 24 02     .81		LDA PrimaryRomSize
  581 3345:29 07        		AND #ROM_PAGING_MASK
  582 3347:8D 27 02     		STA RomSizeTemp 
  583 334A:AD 25 02     		LDA SecondaryRomSize	; Secondary paging is at bits 3
  584 334D:29 07        		AND #ROM_PAGING_MASK	; Mask to make sure it is withi
  585 334F:0A           		ASL
  586 3350:0A           		ASL
  587 3351:0A           		ASL					; Shift to bits 3-5
  588 3352:0D 27 02     		ORA RomSizeTemp		; Combine with primary paging
  589 3355:8D D3 15     		STA ROMPAGE			; Set resulting ROM primary and second
  590 3358:8D 26 02     		STA ROMPAGE_RAM		; ROMPAGE_RAM Shadow address
  591 335B:60           		RTS
  592                   
  593                   ; $335C
  594 335C:             DownloadROM
  595 335C:9C D3 15     		STZ ROMPAGE 		; "Before accessing memory through thi
  596 335F:             .83
  597 335F:EE 21 02     		INC CartRegister	; Least significant byte of address
  598 3362:D0 **        		BNE .82				; Receive byte and write to ROM 
  599 3364:EE 22 02     		INC CartRegister+1
  600 3367:D0 **        		BNE .82
  601 3369:EE 23 02     		INC CartRegister+2	; Most significant
  602 336C:D0 **        		BNE .82		
  603 336E:AD 26 02     		LDA ROMPAGE_RAM
  604 3371:8D D3 15     		STA ROMPAGE			; Restore original ROM paging, as read
  605 3374:60           		RTS
Epyx HandyAsm 1.12      howard.src                      28-Aug-12511:46:53 Page   12
                                                        11:46:53  

  606                   		
  607 3375:20 95 32     .82		JSR ReceiveByte
  608 3378:92 04        		STA (sysptr3+LO)	; Write address of current ROM sect
  609 337A:80 E3        		BRA .83
  610                   
  611                   ; $337C
  612 337C:             UploadROM
  613 337C:20 A9 32     		JSR BeginUpload		; Uploading of ROM content
  614 337F:AD 20 02     		LDA HowardEnabled
  615 3382:D0 **        		BNE .84				; If Howard is visible, 
  616 3384:9C D3 15     		STZ ROMPAGE			; "Before accessing memory through thi
  617 3387:EE 21 02     .84		INC CartRegister			
  618 338A:D0 **        		BNE .85
  619 338C:EE 22 02     		INC CartRegister+1
  620 338F:D0 **        		BNE .85
  621 3391:EE 23 02     		INC CartRegister+2
  622 3394:D0 **        		BNE .85
  623 3396:AD 26 02     		LDA ROMPAGE_RAM
  624 3399:8D D3 15     		STA ROMPAGE
  625 339C:20 B9 32     		JSR EndUpload
  626 339F:60           		RTS
  627                   
  628                   ; $33A0
  629 33A0:             .85
  630 33A0:B2 04        		LDA (sysptr3+LO) 
  631 33A2:20 9E 32     		JSR SendByte
  632 33A5:80 E0        		BRA .84
  633                   
Epyx HandyAsm 1.12      Symbols                         28-Aug-12511:46:53 Page   13
                                                        11:46:53  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 A_OFFSET                          $0000 BACKGROUND_SPRITE
$0001 BACKNONCOLL_SPRITE                $0000 BACK_SHADOW_SPRITE
$0200 BASE_ORG                          MACRO BEGIN_ALLOCATE_ZEROPAGE
MACRO BEGIN_ZPAGE                       $00C0 BITS_MASK
$FDB0 BLUERED0                          $FDB1 BLUERED1
$FDB2 BLUERED2                          $FDB3 BLUERED3
$FDB4 BLUERED4                          $FDB5 BLUERED5
$FDB6 BLUERED6                          $FDB7 BLUERED7
$FDB8 BLUERED8                          $FDB9 BLUERED9
$FDBA BLUEREDA                          $FDBB BLUEREDB
$FDBC BLUEREDC                          $FDBD BLUEREDD
$FDBE BLUEREDE                          $FDBF BLUEREDF
$0002 BORROW_IN                         $0001 BORROW_OUT
$0003 BOUNDARY_SPRITE                   $0015 BREAK_CONTROLS
$0002 BSHADOW_SPRITE                    $0040 BUSY
$0013 BUS_MONITOR                       $0002 B_BUTTON
$32A9 BeginUpload                       $020A BusMonitor
$0002 CART0_IO_INACTIVE                 $0004 CART1_IO_INACTIVE
$0002 CART_ADDR_DATA                    $0001 CART_ADDR_STROBE
$0002 CART_POWER_OFF                    $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $0003 CONTINUE_REQUEST
$FD91 CPUSLEEP                          $FFFE CPU_IRQ
$FFFA CPU_NMI                           $FFFC CPU_RESET
$0221 CartRegister                      $0002 DATA
$0080 DATA_AVAILABLE                    $0080 DIRECTION_INPUT
$0000 DIRECTION_OUTPUT                  $FD95 DISPADRH
$FD94 DISPADRL                          $FD92 DISPCTL
$1FE0 DISPLAY_BUFSIZE                   $0008 DISP_COLOR
$0002 DISP_FLIP                         $0004 DISP_FOURBIT
$0001 DMA_ENABLE                        $0001 DOWNLOAD_REQUEST
$0001 DRAW_LEFT                         $0002 DRAW_UP
$0200 DirectMemory                      $314F Done
$3095 Download                          $335C DownloadROM
$0008 ENABLE_COUNT                      $0080 ENABLE_INT
$0020 ENABLE_INTEGRATE                  $0010 ENABLE_RELOAD
MACRO END_ALLOCATE_ZEROPAGE             $0000 END_OF_FILE
MACRO END_ZPAGE                         $0004 EVER_ON
$0001 EXTERNAL_POWER                    $32B9 EndUpload
$0080 FEEDBACK_7                        $0011 FILL_MEM
$0004 FLIP_BUTTON                       $00C0 FOUR_PER_PIXEL
Epyx HandyAsm 1.12      Symbols                         28-Aug-12511:46:53 Page   14
                                                        11:46:53  

$0004 FRAMERR                           $0005 GO_REQUEST
$FDA0 GREEN0                            $FDA1 GREEN1
$FDA2 GREEN2                            $FDA3 GREEN3
$FDA4 GREEN4                            $FDA5 GREEN5
$FDA6 GREEN6                            $FDA7 GREEN7
$FDA8 GREEN8                            $FDA9 GREEN9
$FDAA GREENA                            $FDAB GREENB
$FDAC GREENC                            $FDAD GREEND
$FDAE GREENE                            $FDAF GREENF
$FC00 HARDWARE_START                    $FD00 HCOUNT
$0020 HFLIP                             $0001 HI
$0007 HIDE_HOWARD_REQUEST               $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$0016 HOWARD_ABUS                       $0017 HOWARD_BBUS
$0018 HOWARD_CBUS                       $0019 HOWARD_DBUS
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         $FC29 HSIZOFFH
$FC28 HSIZOFFL                          $0220 HowardEnabled
$0002 INNER_BUTTON                      $FD80 INTRST
$FD81 INTSET                            $FD8B IODAT
$FD8A IODIR                             $FCC3 IOData
$FCC2 IOStatus                          $32C7 InitComm
$FBF0 IntTable                          $FCB0 JOYSTICK
$0080 JOY_DOWN                          $0010 JOY_LEFT
$0020 JOY_RIGHT                         $0040 JOY_UP
$0012 LARGE_DATA                        $0004 LAST_CLOCK
$15D0 LDRADD                            $FCC0 LEDS
$0010 LEFT0_SELECT                      $0020 LEFT1_SELECT
$0040 LEFT2_SELECT                      $0080 LEFT3_SELECT
$0008 LEFTHAND                          $0008 LEFTHANDED
$00F0 LEFT_ATTENMASK                    $0080 LITERAL
$0000 LO                                $FFF9 MAPCTL
$FC55 MATHA                             $FC54 MATHB
$FC53 MATHC                             $0020 MATHCARRY
$FC52 MATHD                             $FC63 MATHE
$FC62 MATHF                             $FC61 MATHG
$FC60 MATHH                             $FC6F MATHJ
$FC6E MATHK                             $FC6D MATHL
$FC6C MATHM                             $FC57 MATHN
$FC56 MATHP                             $0040 MATHWARNING
$0080 MATHWORKING                       $FD88 MIKEYHREV
$FD89 MIKEYSREV                         $FD00 MIKEY_BASE
$0002 MIKEY_SPACE                       $0010 MONITOR_BYTECOUNT
$0001 MONITOR_I                         $F900 MONITOR_RAM_RESERVED
$00F8 MONITOR_ZP_RESERVED               $FD44 MPAN
$FD50 MSTEREO                           $FD9C MTEST0
$FD9D MTEST1                            $FD9E MTEST2
$3029 Main                              $3278 MapMemory
$0006 NEXTZPG                           $3000 NMI_ORG
$0004 NOEXP                             $0005 NONCOLL_SPRITE
$0000 NOP_REQUEST                       $0004 NORMAL_SPRITE
$0020 NO_COLLIDE                        $3000 NmiHandler
$0000 ONE_PER_PIXEL                     $0008 OPTION1_BUTTON
$0004 OPTION2_BUTTON                    $0001 ORIGIN
$0001 OUTER_BUTTON                      $0008 OVERRUN
$0002 PAGESIZE_1024                     $0001 PAGESIZE_2048
$0004 PAGESIZE_256                      $0000 PAGESIZE_4096
$0003 PAGESIZE_512                      $0001 PARBIT
$0010 PAREN                             $0010 PARERR
Epyx HandyAsm 1.12      Symbols                         28-Aug-12511:46:53 Page   15
                                                        11:46:53  

$0001 PAREVEN                           $0001 PAUSE_SWITCH
$FD93 PBKUP                             $0004 PC_OFFSET
$1581 PORT_DATA                         $1582 PORT_DIRECTION
$1583 PORT_POUT                         $1580 PORT_STATUS
$0080 POUT                              $0002 POWERON
$0007 PRIMARY_PAGING_MASK               $FC2F PROCADRH
$FC2E PROCADRL                          $0006 P_OFFSET
$0224 PrimaryRomSize                    $1000 RCARTEN
$FCB2 RCART_0                           $FCB3 RCART_1
$0010 READ_ENABLE                       $0010 REGISTER
$0007 REGISTER_BYTECOUNT                $0010 RELOAD_HV
$0020 RELOAD_HVS                        $0030 RELOAD_HVST
$0030 RELOAD_MASK                       $0000 RELOAD_NONE
$0008 RESETERR                          $0040 RESET_DONE
$0008 RESTART_BUTTON                    $0008 RESTLESS
$0008 REUSE_PALETTE                     $0001 RIGHT0_SELECT
$0002 RIGHT1_SELECT                     $0004 RIGHT2_SELECT
$0008 RIGHT3_SELECT                     $000F RIGHT_ATTENMASK
$001A ROM                               $15D3 ROMPAGE
$0226 ROMPAGE_RAM                       $019A ROM_HEADER_SIZE
$0007 ROM_PAGING_MASK                   $0004 ROM_SPACE
$0003 RUN_ADDRESS                       $0002 RXBRK
$0040 RXINTEN                           $0040 RXRDY
$32E3 ReadMemory                        $31CB ReadRange
$3295 ReceiveByte                       $31EB ReceiveHoward
$31C4 ReceiveWord                       $0203 Registers
$0227 RomSizeTemp                       $0201 RunAddr
$FC2D SCBADRH                           $FC2C SCBADRL
$FC11 SCBNEXTH                          $FC10 SCBNEXTL
$FC23 SCVPOSH                           $FC22 SCVPOSL
$FD90 SDONEACK                          $0038 SECONDARY_PAGING_MASK
$0006 SEE_HOWARD_REQUEST                $0001 SEG
$15E0 SEGWR                             $FD8C SERCTL
$FD8D SERDAT                            $FD10 SERIALRATE
$0010 SERIAL_INT                        $0007 SHADOW_SPRITE
$0080 SIGNMATH                          $0004 SKIP_SPRITE
$0004 SLAVE_REQUEST                     $FC82 SPRCOLL
$FC80 SPRCTL0                           $FC81 SPRCTL1
$FC13 SPRDLINEH                         $FC12 SPRDLINEL
$FC21 SPRDOFFH                          $FC20 SPRDOFFL
$FC91 SPRGO                             $FC19 SPRHSIZH
$FC18 SPRHSIZL                          $FC83 SPRINIT
$0002 SPRITESTOP                        $0002 SPRITETOSTOP
$0001 SPRITEWORKING                     $0001 SPRITE_GO
$FC92 SPRSYS                            $FC1B SPRVSIZH
$FC1A SPRVSIZL                          $FC1D STRETCHH
$FC1C STRETCHL                          $FC90 SUZYBUSEN
$FC88 SUZYHREV                          $FC89 SUZYSREV
$FC00 SUZY_BASE                         $0001 SUZY_SPACE
$FCB1 SWITCHES                          $FD87 SYSCTL1
$0003 S_OFFSET                          $0225 SecondaryRomSize
$329E SendByte                          $3239 SendRange
$325A SendRangeCore                     $15E1 TEMPORG
$0080 THREE_PER_PIXEL                   $FC03 TILTACUMH
$FC02 TILTACUML                         $FC1F TILTH
$FC1E TILTL                             $FD00 TIMER0
$0001 TIMER0_INT                        $FD04 TIMER1
$0002 TIMER1_INT                        $FD08 TIMER2
$0004 TIMER2_INT                        $FD0C TIMER3
Epyx HandyAsm 1.12      Symbols                         28-Aug-12511:46:53 Page   16
                                                        11:46:53  

$0008 TIMER3_INT                        $FD10 TIMER4
$FD14 TIMER5                            $0020 TIMER5_INT
$FD18 TIMER6                            $0040 TIMER6_INT
$FD1C TIMER7                            $0080 TIMER7_INT
$0008 TIMER_DONE                        $0000 TIM_BACKUP
$0001 TIM_CONTROLA                      $0003 TIM_CONTROLB
$0002 TIM_COUNT                         $FC01 TMPADRH
$FC00 TMPADRL                           $0014 TRACE
$0080 TURBO_DISABLE                     $0040 TWO_PER_PIXEL
$0002 TXBRK                             $0020 TXEMPTY
$0080 TXINTEN                           $0004 TXOPEN
$0080 TXRDY                             $0004 UNSAFEACCESS
$0004 UNSAFEACCESSRST                   $0002 UPLOAD_REQUEST
$0002 UP_CURRENT_PAGE                   $0005 UP_HAHDATA
$0004 UP_MEMWATCH                       $0003 UP_REGISTERS
$0001 UP_THIS_PAGE                      $3150 Upload
$31C3 UploadDone                        $337C UploadROM
$FD08 VCOUNT                            $0008 VECTOR_SPACE
$021E VERSION                           $0004 VERTICAL_INT
$0010 VFLIP                             $FC0D VIDADRH
$FC0C VIDADRL                           $FC09 VIDBASH
$FC08 VIDBASL                           $FC07 VOFFH
$FC06 VOFFL                             $FC17 VPOSSTRTH
$FC16 VPOSSTRTL                         $FC27 VSIZACUMH
$FC26 VSIZACUML                         $FC2B VSIZOFFH
$FC2A VSIZOFFL                          $0010 VSTRETCH
$0010 VSTRETCHING                       $0006 XOR_SHADOW_SPRITE
$0006 XOR_SPRITE                        $0001 X_OFFSET
$0002 Y_OFFSET                          $0000 sysptr
$0002 sysptr2                           $0004 sysptr3
