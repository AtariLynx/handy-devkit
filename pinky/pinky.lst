Epyx HandyAsm 1.12      pinky.src                       13-Aug-12505:21:10 Page    1
                                                        05:21:10  

    1                   * ====================================================
    2                   
    3                   	.LIST OFF
    9                   	.LIST ON
   10                   
   11      0000         LO				.EQ 0
   12      0001         HI				.EQ 1
   13                   
   14      0200         BASE_ORG		.EQ $0200
   15      3000         NMI_ORG			.EQ $3000
   16                   
   17                   * ====================================================
   18                   
   19      00F0         NEXTZPG			.= $F0
   20                   
   21                   	BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
   22                   
   23 00F0:             loadptr			.DS 2
   24 00F2:             runptr			.DS 2
   25                   
   26                   	END_ZPAGE
    1      00F4       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 00F4:           + 	  .ORG TEMPORG
    6                 + 
   27                   
   28                   * ====================================================
   29                   
   30 FFFE:             		.ORG BASE_ORG
   31                   		.RUN *
   32                   
   33 0200:A2 **        		LDX #LOAD_COUNT		; $66 bytes
   34 0202:BD ** **     .0		LDA NmiHandler-1,X	; Copy from $021C to $3000
   35 0205:9D FF 2F     		STA NMI_ORG-1,X
   36 0208:CA           		DEX
   37 0209:D0 F7        		BNE .0
   38 020B:A9 08        		LDA #VECTOR_SPACE
   39 020D:8D F9 FF     		STA MAPCTL			; Vectors to RAM
   40 0210:A9 00        		LDA #<NMI_ORG
   41 0212:8D FA FF     		STA CPU_NMI+LO		; Set NMI to point to code
   42 0215:A9 30        		LDA #>NMI_ORG
   43 0217:8D FB FF     		STA CPU_NMI+HI
   44 021A:80 FE        .1		BRA .1				; Wait for NMI
   45                   
   46      2DE4         OFFSET  .EQ NMI_ORG-*
   47                   
   48 021C:             NmiHandler
   49 021C:A9 02        		LDA #CART_ADDR_DATA
   50 021E:8D 8B FD     		STA IODAT
   51 0221:1A           		INC A
   52 0222:8D 8A FD     		STA IODIR
   53 0225:A9 06        		LDA #06
   54 0227:20 ** **     		JSR OFFSET+SetPage	; Select cartridge page 6
   55 022A:9C B3 FC     		STZ RCART_1			; Write acknowledge
Epyx HandyAsm 1.12      pinky.src                       13-Aug-12505:21:10 Page    2
                                                        05:21:10  

   56 022D:20 ** **     		JSR OFFSET+ReceiveWord	; Get address
   57 0230:86 F0        		STX loadptr+LO		; Set as both load and run address
   58 0232:86 F2        		STX runptr+LO
   59 0234:85 F1        		STA loadptr+HI
   60 0236:85 F3        		STA runptr+HI
   61 0238:20 ** **     		JSR OFFSET+ReceiveWord	; Get length
   62 023B:A8           		TAY					; Y is MSB, X is LSB (2's complement)
   63 023C:20 ** **     .1		JSR OFFSET+ReceiveByte	; Read program byte 
   64 023F:92 F0        		STA (loadptr)		; Store at current load address
   65 0241:E6 F0        		INC loadptr+LO		; Next address
   66 0243:D0 **        		BNE .0
   67 0245:E6 F1        		INC loadptr+HI
   68 0247:E8           .0		INX					; Adjust counters
   69 0248:D0 F2        		BNE .1
   70 024A:C8           		INY
   71 024B:D0 EF        		BNE .1
   72 024D:6C F2 00     		JMP (runptr)		; Run program at run address
   73                   
   74 0250:             ReceiveWord ; $3034
   75 0250:20 ** **     		JSR OFFSET+ReceiveByte
   76 0253:AA           		TAX
   77                   
   78 0254:             ReceiveByte ; 3038 Get a byte from parallel port
   79 0254:A9 08        		LDA #08
   80 0256:20 ** **     		JSR OFFSET+SetPage	; Select cartridge page 8
   81 0259:AD B3 FC     .0		LDA RCART_1			; Read strobe from port
   82 025C:10 FB        		BPL .0				; Wait for strobe
   83 025E:A9 09        		LDA #09
   84 0260:20 ** **     		JSR OFFSET+SetPage	; Select cartridge page 9
   85 0263:AD B3 FC     		LDA RCART_1			; Read data byte
   86 0266:60           		RTS
   87                   
   88 0267:             SetPage ; 304B Set cart page routine (preserves X)
   89 0267:DA           		PHX
   90 0268:38           		SEC
   91 0269:80 **        		BRA .0
   92 026B:90 **        .2		BCC .1
   93 026D:8E 8B FD     		STX IODAT			; Cart address data X = %10
   94 0270:18           		CLC
   95 0271:E8           .1		INX
   96 0272:8E 87 FD     		STX SYSCTL1			; Strobe shifter    X = %11
   97 0275:A2 02        .0		LDX #POWERON
   98 0277:8E 87 FD     		STX SYSCTL1			; Strobe shifter    X = %10
   99 027A:2A           		ROL A
  100 027B:9C 8B FD     		STZ IODAT			; Cart address data   = %00
  101 027E:D0 EB        		BNE .2
  102 0280:FA           		PLX
  103 0281:60           		RTS
  104                   
  105      0066         LOAD_COUNT	.EQ *-NmiHandler
  106      0082         SIZE		.EQ *-BASE_ORG
  107                   
  108                   	#REPEAT 150-SIZE
  109 MACRO             		.BYTE $00
  110                   	#ENDM
    1 0282:00         + 		.BYTE $00
    2 0283:00         + 		.BYTE $00
    3 0284:00         + 		.BYTE $00
    4 0285:00         + 		.BYTE $00
Epyx HandyAsm 1.12      pinky.src                       13-Aug-12505:21:10 Page    3
                        pinky.src                       05:21:10  

    5 0286:00         + 		.BYTE $00
    6 0287:00         + 		.BYTE $00
    7 0288:00         + 		.BYTE $00
    8 0289:00         + 		.BYTE $00
    9 028A:00         + 		.BYTE $00
   10 028B:00         + 		.BYTE $00
   11 028C:00         + 		.BYTE $00
   12 028D:00         + 		.BYTE $00
   13 028E:00         + 		.BYTE $00
   14 028F:00         + 		.BYTE $00
   15 0290:00         + 		.BYTE $00
   16 0291:00         + 		.BYTE $00
   17 0292:00         + 		.BYTE $00
   18 0293:00         + 		.BYTE $00
   19 0294:00         + 		.BYTE $00
   20 0295:00         + 		.BYTE $00
   21                 + 
Epyx HandyAsm 1.12      Symbols                         13-Aug-12505:21:10 Page    4
                                                        05:21:10  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 BACKGROUND_SPRITE                 $0001 BACKNONCOLL_SPRITE
$0000 BACK_SHADOW_SPRITE                $0200 BASE_ORG
MACRO BEGIN_ALLOCATE_ZEROPAGE           MACRO BEGIN_ZPAGE
$00C0 BITS_MASK                         $FDB0 BLUERED0
$FDB1 BLUERED1                          $FDB2 BLUERED2
$FDB3 BLUERED3                          $FDB4 BLUERED4
$FDB5 BLUERED5                          $FDB6 BLUERED6
$FDB7 BLUERED7                          $FDB8 BLUERED8
$FDB9 BLUERED9                          $FDBA BLUEREDA
$FDBB BLUEREDB                          $FDBC BLUEREDC
$FDBD BLUEREDD                          $FDBE BLUEREDE
$FDBF BLUEREDF                          $0002 BORROW_IN
$0001 BORROW_OUT                        $0003 BOUNDARY_SPRITE
$0002 BSHADOW_SPRITE                    $0002 B_BUTTON
$0002 CART0_IO_INACTIVE                 $0004 CART1_IO_INACTIVE
$0002 CART_ADDR_DATA                    $0001 CART_ADDR_STROBE
$0002 CART_POWER_OFF                    $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $FD91 CPUSLEEP
$FFFE CPU_IRQ                           $FFFA CPU_NMI
$FFFC CPU_RESET                         $FD95 DISPADRH
$FD94 DISPADRL                          $FD92 DISPCTL
$1FE0 DISPLAY_BUFSIZE                   $0008 DISP_COLOR
$0002 DISP_FLIP                         $0004 DISP_FOURBIT
$0001 DMA_ENABLE                        $0001 DRAW_LEFT
$0002 DRAW_UP                           $0008 ENABLE_COUNT
$0080 ENABLE_INT                        $0020 ENABLE_INTEGRATE
$0010 ENABLE_RELOAD                     MACRO END_ALLOCATE_ZEROPAGE
MACRO END_ZPAGE                         $0004 EVER_ON
$0001 EXTERNAL_POWER                    $0080 FEEDBACK_7
$0004 FLIP_BUTTON                       $00C0 FOUR_PER_PIXEL
$0004 FRAMERR                           $FDA0 GREEN0
$FDA1 GREEN1                            $FDA2 GREEN2
$FDA3 GREEN3                            $FDA4 GREEN4
$FDA5 GREEN5                            $FDA6 GREEN6
$FDA7 GREEN7                            $FDA8 GREEN8
$FDA9 GREEN9                            $FDAA GREENA
$FDAB GREENB                            $FDAC GREENC
$FDAD GREEND                            $FDAE GREENE
$FDAF GREENF                            $FC00 HARDWARE_START
$FD00 HCOUNT                            $0020 HFLIP
Epyx HandyAsm 1.12      Symbols                         13-Aug-12505:21:10 Page    5
                                                        05:21:10  

$0001 HI                                $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         $FC29 HSIZOFFH
$FC28 HSIZOFFL                          $0002 INNER_BUTTON
$FD80 INTRST                            $FD81 INTSET
$FD8B IODAT                             $FD8A IODIR
$FCC3 IOData                            $FCC2 IOStatus
$FCB0 JOYSTICK                          $0080 JOY_DOWN
$0010 JOY_LEFT                          $0020 JOY_RIGHT
$0040 JOY_UP                            $0004 LAST_CLOCK
$FCC0 LEDS                              $0010 LEFT0_SELECT
$0020 LEFT1_SELECT                      $0040 LEFT2_SELECT
$0080 LEFT3_SELECT                      $0008 LEFTHAND
$0008 LEFTHANDED                        $00F0 LEFT_ATTENMASK
$0080 LITERAL                           $0000 LO
$0066 LOAD_COUNT                        $FFF9 MAPCTL
$FC55 MATHA                             $FC54 MATHB
$FC53 MATHC                             $0020 MATHCARRY
$FC52 MATHD                             $FC63 MATHE
$FC62 MATHF                             $FC61 MATHG
$FC60 MATHH                             $FC6F MATHJ
$FC6E MATHK                             $FC6D MATHL
$FC6C MATHM                             $FC57 MATHN
$FC56 MATHP                             $0040 MATHWARNING
$0080 MATHWORKING                       $FD88 MIKEYHREV
$FD89 MIKEYSREV                         $FD00 MIKEY_BASE
$0002 MIKEY_SPACE                       $FD44 MPAN
$FD50 MSTEREO                           $FD9C MTEST0
$FD9D MTEST1                            $FD9E MTEST2
$00F4 NEXTZPG                           $3000 NMI_ORG
$0004 NOEXP                             $0005 NONCOLL_SPRITE
$0004 NORMAL_SPRITE                     $0020 NO_COLLIDE
$021C NmiHandler                        $2DE4 OFFSET
$0000 ONE_PER_PIXEL                     $0008 OPTION1_BUTTON
$0004 OPTION2_BUTTON                    $0001 OUTER_BUTTON
$0008 OVERRUN                           $0001 PARBIT
$0010 PAREN                             $0010 PARERR
$0001 PAREVEN                           $0001 PAUSE_SWITCH
$FD93 PBKUP                             $0002 POWERON
$FC2F PROCADRH                          $FC2E PROCADRL
$FCB2 RCART_0                           $FCB3 RCART_1
$0010 READ_ENABLE                       $0010 RELOAD_HV
$0020 RELOAD_HVS                        $0030 RELOAD_HVST
$0030 RELOAD_MASK                       $0000 RELOAD_NONE
$0008 RESETERR                          $0040 RESET_DONE
$0008 RESTART_BUTTON                    $0008 RESTLESS
$0008 REUSE_PALETTE                     $0001 RIGHT0_SELECT
$0002 RIGHT1_SELECT                     $0004 RIGHT2_SELECT
$0008 RIGHT3_SELECT                     $000F RIGHT_ATTENMASK
$019A ROM_HEADER_SIZE                   $0004 ROM_SPACE
$0002 RXBRK                             $0040 RXINTEN
$0040 RXRDY                             $0254 ReceiveByte
$0250 ReceiveWord                       $FC2D SCBADRH
$FC2C SCBADRL                           $FC11 SCBNEXTH
$FC10 SCBNEXTL                          $FC23 SCVPOSH
$FC22 SCVPOSL                           $FD90 SDONEACK
$FD8C SERCTL                            $FD8D SERDAT
$FD10 SERIALRATE                        $0010 SERIAL_INT
Epyx HandyAsm 1.12      Symbols                         13-Aug-12505:21:10 Page    6
                                                        05:21:10  

$0007 SHADOW_SPRITE                     $0080 SIGNMATH
$0082 SIZE                              $0004 SKIP_SPRITE
$FC82 SPRCOLL                           $FC80 SPRCTL0
$FC81 SPRCTL1                           $FC13 SPRDLINEH
$FC12 SPRDLINEL                         $FC21 SPRDOFFH
$FC20 SPRDOFFL                          $FC91 SPRGO
$FC19 SPRHSIZH                          $FC18 SPRHSIZL
$FC83 SPRINIT                           $0002 SPRITESTOP
$0002 SPRITETOSTOP                      $0001 SPRITEWORKING
$0001 SPRITE_GO                         $FC92 SPRSYS
$FC1B SPRVSIZH                          $FC1A SPRVSIZL
$FC1D STRETCHH                          $FC1C STRETCHL
$FC90 SUZYBUSEN                         $FC88 SUZYHREV
$FC89 SUZYSREV                          $FC00 SUZY_BASE
$0001 SUZY_SPACE                        $FCB1 SWITCHES
$FD87 SYSCTL1                           $0267 SetPage
$FFFE TEMPORG                           $0080 THREE_PER_PIXEL
$FC03 TILTACUMH                         $FC02 TILTACUML
$FC1F TILTH                             $FC1E TILTL
$FD00 TIMER0                            $0001 TIMER0_INT
$FD04 TIMER1                            $0002 TIMER1_INT
$FD08 TIMER2                            $0004 TIMER2_INT
$FD0C TIMER3                            $0008 TIMER3_INT
$FD10 TIMER4                            $FD14 TIMER5
$0020 TIMER5_INT                        $FD18 TIMER6
$0040 TIMER6_INT                        $FD1C TIMER7
$0080 TIMER7_INT                        $0008 TIMER_DONE
$0000 TIM_BACKUP                        $0001 TIM_CONTROLA
$0003 TIM_CONTROLB                      $0002 TIM_COUNT
$FC01 TMPADRH                           $FC00 TMPADRL
$0080 TURBO_DISABLE                     $0040 TWO_PER_PIXEL
$0002 TXBRK                             $0020 TXEMPTY
$0080 TXINTEN                           $0004 TXOPEN
$0080 TXRDY                             $0004 UNSAFEACCESS
$0004 UNSAFEACCESSRST                   $FD08 VCOUNT
$0008 VECTOR_SPACE                      $0004 VERTICAL_INT
$0010 VFLIP                             $FC0D VIDADRH
$FC0C VIDADRL                           $FC09 VIDBASH
$FC08 VIDBASL                           $FC07 VOFFH
$FC06 VOFFL                             $FC17 VPOSSTRTH
$FC16 VPOSSTRTL                         $FC27 VSIZACUMH
$FC26 VSIZACUML                         $FC2B VSIZOFFH
$FC2A VSIZOFFL                          $0010 VSTRETCH
$0010 VSTRETCHING                       $0006 XOR_SHADOW_SPRITE
$0006 XOR_SPRITE                        $00F0 loadptr
$00F2 runptr                            
