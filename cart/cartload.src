* ===========================================================================

	.LIST OFF

		.IN 6502:include/harddefs.i
		.IN 6502:macros/sys.mac
  		.IN	6502:macros/zpage.mac

	.LIST ON

BASE_ORG		.EQ $2000
LO				.EQ 0
HI				.EQ 1

* ===========================================================================

		.IN 6502:src/syszpage.src

  		BEGIN_ZPAGE

CartPage		.DS 1	; $06
CartOffsetLo	.DS 1	; $07
CartOffsetHi	.DS 1	; $08
Unknown2		.DS 1	; $09
PageCount		.DS 1	; $0A
CartSize		.DS 3	; $0B-$0C-$0D

  		END_ZPAGE

* ===========================================================================

		.ORG BASE_ORG
		.RUN *

		SEI
		CLD
		LDX #$FF
		TXS

		INITSYS

		LDA #AUDIN_BIT+RESTLESS+CART_ADDR_DATA
		STA IODAT
		STA IODAT_RAM
		STA IODIR
		STA IODIR_RAM

		JSR NotifyHandyReset

; Receive cartridge destination address
		JSR ReceiveByte	; Receive byte for cartridge page
		STA CartPage
		JSR ReceiveByte
		STA CartOffsetLo
		JSR ReceiveByte
		STA CartOffsetHi

; Receive 24-bits cartridge size
		JSR ReceiveByte
		STA CartSize
		JSR ReceiveByte
		STA CartSize+1
		JSR ReceiveByte
		STA CartSize+2
		STA Unknown2

.3		LDA #$00
		STA sysptr
		LDA #$22
		STA sysptr+1	; Store address $2200 at $0000

		LDA #$10		; Read 16 pages into RAM at $2200 to $37FF
		STA PageCount
.0		JSR ReceiveByte	; Receive and echo byte from parallel port Amiga
		STA (sysptr)	; Store byte in ($0000) 
		INC sysptr
		BNE .0
		INC sysptr+1
		DEC PageCount	; Full 256 byte page was received 
		BNE .0

; Write values in RAM to cartridge
		LDA #$00
		STA sysptr
		LDA #$22
		STA sysptr+1
		LDA #$10		; Loop through 16 pages again
		STA PageCount
.2		LDA CartPage
		JSR SetCartPage
		LDA #RESTLESS
		STA IODAT
		LDX Unknown2
		LDY #$00
.1		LDA (sysptr),y
		STA RCART_0		; Store data in Pinky ROM
		INY
		BNE .1
		INC sysptr+1	; Full page of 256 bytes was read
		DEC PageCount
		DEX
		BNE .1
		INC CartPage
		LDA PageCount
		BNE .2
		LDA #READ_ENABLE+RESTLESS+CART_ADDR_DATA
		STA IODAT
		LDA CartPage
		BNE .3			; Repeat 
		BRK				; Pause Mandy
		NOP
		JMP BASE_ORG	; Start program if requested

; Read and echo byte from page 9 to 1
ReceiveByte
		JSR ReadPage8	; Read status byte from page 8
		BPL ReceiveByte	; Wait for strobe on bit 7
		JMP ReadPage9	; Read from page 9 data (latch)
		PHA
.3		JSR ReadPage8	; Read status byte from page 8
		BPL .3			; Wait for strobe again
		PLA				; Restore A
		JMP SendByte	; Write A to page 1 and return (latch)

; Strobe (6), zero to 2, zero to 7
BeginUpload
		JSR ReadPage8	; Read status byte from page 8
		AND #$40		; Wait for strobe on bit 6
		BEQ BeginUpload
; Switch to TX mode
		JSR Write0Page2	; Select (or write zero) page 2
		JMP Write0Page7	; Page 7 and return

; Strobe (7), zero to 6, zero to 3
EndUpload
		JSR ReadPage8	; Read status byte from page 8
		BPL EndUpload	; Wait for strobe on bit 7
; Switch to RX mode
		JSR Write0Page6	; Write zero to page 6
		JMP Write0Page3	; Write zero to page 3

NotifyHandyReset ; (Preserves A) init link
		PHA
; Wait for Amiga in TX mode
.1		JSR ReadPage8	; Read status byte from page 8
		AND #$40		; Check for bit 6
		BNE .1			; Wait
; Switch to TX mode
		JSR Write0Page6	; Zero to page 6	set mode to input
		JSR Write0Page7	; Zero to page 7	io bit on
; Wait for Amiga in RX mode
.2		JSR ReadPage8	; Read status byte from page 8 
		AND #$40
		BEQ .2			; Wait for strobe bit 6 again
; Switch to RX mode
		JSR Write0Page6	; Zero to page 6	set mode to input
		JSR Write0Page3	; Zero to page 3	io bit off
		PLA
		RTS

Write0Page6	; Set 0110
		LDA #$06		; Select page 6 
		BRA WriteCart1
Write0Page2	; Set 0010
		LDA #$02		; Select page 2
		BRA WriteCart1
Write0Page7	; Set 0111
		LDA #$07		; Select page 7
		BRA WriteCart1
Write0Page3	; Set 0011 
		LDA #$03		; Select page 3
WriteCart1	; Set cart control
		JSR SetCartBlock1
		STZ RCART_1		; Clear RCART_1
		RTS

; Out A with value from RCART_1
ReadPage8	; Read status
		LDA #$08
		BRA ReadCart1
ReadPage9	; Read latch
		LDA #$09
ReadCart1
		JSR SetCartBlock1
		LDA RCART_1
		RTS

; Write A to page 1, preserves A
SendByte		; Write latch
		PHA
		LDA #$01
		JSR SetCartBlock1
		PLA
		STA RCART_1
		RTS

; Block select on cartridge bank 1?
; In A, saves X and Y
SetCartBlock1	; Set cart control
		PHX
		PHY
		TAX
		LDY #POWERON		; Power on and cart address strobe to 0
		STY SYSCTL1			; Strobe cart address to reset ripple counter
		INY
		LDA IODAT
		ORA #RESTLESS
		STA IODAT
		LDA IODIR_RAM		; Toggle a few bits in IODIR
		ORA #CART_ADDR_DATA	; Cart address data to output
		ORA #RESTLESS		; Rest output to output
		STA IODIR
		LDA IODAT
		ORA #CART_ADDR_DATA
		ORA #RESTLESS
		STA .fd				; Store IODAT value with Rest and Cart Address data set to 1
		AND #~CART_ADDR_DATA
		ORA #RESTLESS
		STA .fe				; Store IODAT with Rest set to 1 and Cart Address data set to 0
		TXA
		SEC
		ROL A
.2		BCC .0
		LDX .fd
		STX IODAT
		BRA .1
.0		LDX .fe
		STX IODAT
.1		STY SYSCTL1
		DEY
		STY SYSCTL1
		INY
		ASL A
		BNE .2
		LDA #RESTLESS
		STA IODAT
		PLY
		PLX
		RTS

.fd		.DS 1
.fe		.DS 1

SetCartPage
		STA .ff
		LDY #READ_ENABLE+RESTLESS+CART_ADDR_DATA
		LDA #READ_ENABLE+RESTLESS
		SEC
		BRA .2
.0		BCC .1
		STY IODAT		; Set CART_ADDR_DATA to clock in 1 bit
		CLC
.1		INX				; Adds in CART_ADDR_STROBE
		STX SYSCTL1
.2		LDX #POWERON
		STX SYSCTL1
		ROL .ff
		STA IODAT
		BNE .0			; Reset CART_ADDR_DATA to clock 0 bit and power ROM
		RTS

.ff		.BY 0

SPRSYS_RAM		.DS 1 ; 219E
DISPCTL_RAM		.DS 1 ; 219F
IODAT_RAM		.DS 1 ; 21A0
IODIR_RAM		.DS 1 ; 21A1
